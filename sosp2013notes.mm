<map version="freeplane 1.2.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<node TEXT="SOSP 2013 Notes" ID="ID_1723255651" CREATED="1283093380553" MODIFIED="1383573172305"><hook NAME="MapStyle">

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node">
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right">
<stylenode LOCALIZED_TEXT="default" MAX_WIDTH="600" COLOR="#000000" STYLE="as_parent">
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details"/>
<stylenode LOCALIZED_TEXT="defaultstyle.note"/>
<stylenode LOCALIZED_TEXT="defaultstyle.floating">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important">
<icon BUILTIN="yes"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#000000">
<font SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#0033ff">
<font SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#00b439">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#990000">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#111111">
<font SIZE="10"/>
</stylenode>
</stylenode>
</stylenode>
</map_styles>
</hook>
<hook NAME="AutomaticEdgeColor" COUNTER="3"/>
<node TEXT="Intro" POSITION="right" ID="ID_635546985" CREATED="1383573244947" MODIFIED="1383573251726">
<edge COLOR="#ff0000"/>
<node TEXT="18% acceptance rate" ID="ID_488885926" CREATED="1383573264970" MODIFIED="1383573274381"/>
<node TEXT="best papers" ID="ID_422149256" CREATED="1383573452013" MODIFIED="1383573455065">
<node TEXT="scalable commutativity" ID="ID_69099391" CREATED="1383573456052" MODIFIED="1383573482383"/>
<node TEXT="optimization-safe systems" ID="ID_380769623" CREATED="1383573482618" MODIFIED="1383573488767"/>
<node TEXT="naiad" ID="ID_428475358" CREATED="1383573489010" MODIFIED="1383573490382"/>
</node>
</node>
<node TEXT="Scalable Commutativity" POSITION="left" ID="ID_729303456" CREATED="1383573721291" MODIFIED="1383573728271">
<edge COLOR="#00ff00"/>
<node TEXT="current approaches" ID="ID_1250567945" CREATED="1383573753177" MODIFIED="1383573756460">
<node TEXT="plot scalability" ID="ID_137251644" CREATED="1383573757488" MODIFIED="1383573760340"/>
<node TEXT="find where it doesn&apos;t scale" ID="ID_221864366" CREATED="1383573760520" MODIFIED="1383573768612"/>
<node TEXT="improve, repeat" ID="ID_1141042968" CREATED="1383573768840" MODIFIED="1383573772539"/>
<node TEXT="disadvantages" ID="ID_829537754" CREATED="1383573779215" MODIFIED="1383573782179">
<node TEXT="software is never truly scalable" ID="ID_683641071" CREATED="1383573783191" MODIFIED="1383573788066"/>
<node TEXT="new bottlenecks turn up with new workloads" ID="ID_549333273" CREATED="1383573788310" MODIFIED="1383573801129"/>
</node>
</node>
<node TEXT="interface scalability" ID="ID_952776654" CREATED="1383573804485" MODIFIED="1383573809241">
<node TEXT="example: creat" ID="ID_1433249966" CREATED="1383573815516" MODIFIED="1383573819512">
<node TEXT="must return lowest possible file descriptor" ID="ID_1995600761" CREATED="1383573820852" MODIFIED="1383573827864"/>
<node TEXT="thus, requires synchronization" ID="ID_151248993" CREATED="1383573828076" MODIFIED="1383573836039"/>
</node>
<node TEXT="Q: When can an interface scale?" ID="ID_1055587045" CREATED="1383573844323" MODIFIED="1383573853526"/>
<node TEXT="rule:" ID="ID_127556098" CREATED="1383573865009" MODIFIED="1383573867469">
<node TEXT="whenever interface operations commute, they are scalable" ID="ID_207315222" CREATED="1383573868257" MODIFIED="1383573876500"/>
</node>
<node TEXT="advantages" ID="ID_1803659236" CREATED="1383573919693" MODIFIED="1383573922337">
<node TEXT="guides entire design process" ID="ID_1236887696" CREATED="1383573924278" MODIFIED="1383573931521"/>
<node TEXT="design" ID="ID_1394878244" CREATED="1383573931789" MODIFIED="1383573934768">
<node TEXT="can find scalable interfaces" ID="ID_260750070" CREATED="1383573935124" MODIFIED="1383573944784"/>
</node>
<node TEXT="implement" ID="ID_396309246" CREATED="1383573945572" MODIFIED="1383573947935">
<node TEXT="sets a clear implementation target" ID="ID_393975095" CREATED="1383573950396" MODIFIED="1383573956807"/>
</node>
<node TEXT="test" ID="ID_1922397030" CREATED="1383573948132" MODIFIED="1383573949463">
<node TEXT="systematic testing" ID="ID_814826348" CREATED="1383573958203" MODIFIED="1383573961478"/>
</node>
</node>
<node TEXT="contribs" ID="ID_1958866338" CREATED="1383573987129" MODIFIED="1383573988940">
<node TEXT="scalable commutativity rule" ID="ID_331370313" CREATED="1383573989985" MODIFIED="1383573994676"/>
<node TEXT="commuter" ID="ID_551338481" CREATED="1383573994929" MODIFIED="1383573997348">
<node TEXT="scalability testing tools" ID="ID_1555801590" CREATED="1383573997632" MODIFIED="1383574001331"/>
</node>
<node TEXT="sv6" ID="ID_938060748" CREATED="1383574002583" MODIFIED="1383574004307">
<node TEXT="scalable POSIX-like kernel" ID="ID_1693047055" CREATED="1383574004768" MODIFIED="1383574009411"/>
</node>
</node>
</node>
<node TEXT="what is scalability?" ID="ID_852201553" CREATED="1383574108609" MODIFIED="1383574114996">
<node TEXT="contented chache lines don&apos;t scale" ID="ID_1004479890" CREATED="1383574115633" MODIFIED="1383574125755">
<node TEXT="up to 25x more expensive than a system call" ID="ID_1324526800" CREATED="1383574126032" MODIFIED="1383574135259"/>
</node>
<node TEXT="thus, operations are scalable if they&apos;re conflict-free" ID="ID_1355662438" CREATED="1383574144367" MODIFIED="1383574156626"/>
<node TEXT="commutative operations are conflict-free by design" ID="ID_1417422175" CREATED="1383574163710" MODIFIED="1383574174560"/>
</node>
<node TEXT="commutativity" ID="ID_658467" CREATED="1383574193963" MODIFIED="1383574198487">
<node TEXT="sensitive to operations, arguments, and *state*" ID="ID_418068630" CREATED="1383574199667" MODIFIED="1383574214150"/>
<node TEXT="adding state makes more operations commutative" ID="ID_378279148" CREATED="1383574218682" MODIFIED="1383574225877">
<node TEXT="for example, creat is not commutative" ID="ID_615558498" CREATED="1383574243192" MODIFIED="1383574257691"/>
<node TEXT="but two creat calls in separate processes do scale" ID="ID_1201409600" CREATED="1383574257903" MODIFIED="1383574283992"/>
<node TEXT="they should scale even for different files in the same folder" ID="ID_1964186646" CREATED="1383574284598" MODIFIED="1383574297784">
<node TEXT="this is not the case for modern OSs" ID="ID_531660250" CREATED="1383574298661" MODIFIED="1383574304696"/>
<node TEXT="but the commutativity rule says an efficient implementation would exist" ID="ID_1985805311" CREATED="1383574304907" MODIFIED="1383574325318"/>
</node>
</node>
</node>
<node TEXT="the Commuter tool" ID="ID_78358001" CREATED="1383574342394" MODIFIED="1383574350692">
<node TEXT="input" ID="ID_1158689690" CREATED="1383574354177" MODIFIED="1383574359220">
<node TEXT="interface spec" ID="ID_711350285" CREATED="1383574359632" MODIFIED="1383574362116"/>
<node TEXT="implementation" ID="ID_33872531" CREATED="1383574362328" MODIFIED="1383574364539"/>
</node>
<node TEXT="output" ID="ID_853422839" CREATED="1383574367967" MODIFIED="1383574369499">
<node TEXT="all scalability bottlenecks" ID="ID_262713780" CREATED="1383574370680" MODIFIED="1383574377195"/>
</node>
<node TEXT="symbolic model" ID="ID_1562609245" CREATED="1383574388927" MODIFIED="1383574394889">
<node TEXT="a model of the interface, written in Python" ID="ID_541877840" CREATED="1383574395438" MODIFIED="1383574407249"/>
</node>
<node TEXT="stages" ID="ID_142648100" CREATED="1383574465017" MODIFIED="1383574466405">
<node TEXT="starts with symbolic model" ID="ID_298061858" CREATED="1383574468881" MODIFIED="1383574473005"/>
<node TEXT="analyzer finds commutativity conditions" ID="ID_1606014825" CREATED="1383574473216" MODIFIED="1383574482996"/>
<node TEXT="testgen generates testcases" ID="ID_1591297070" CREATED="1383574483200" MODIFIED="1383574487987"/>
<node TEXT="testcases executed in QEMU" ID="ID_1627964108" CREATED="1383574488296" MODIFIED="1383574495419"/>
</node>
<node TEXT="Results" ID="ID_1163853662" CREATED="1383574557675" MODIFIED="1383574561950">
<node TEXT="Linux uses directory-wide locking (unnecessary)" ID="ID_532970893" CREATED="1383574563115" MODIFIED="1383574577821"/>
<node TEXT="File descriptor reference counting creates dependencies" ID="ID_1678362903" CREATED="1383574581817" MODIFIED="1383574591180"/>
<node TEXT="address-space wide locking" ID="ID_1191638747" CREATED="1383574591993" MODIFIED="1383574599708"/>
</node>
</node>
<node TEXT="the SV6 scalable OS" ID="ID_537403458" CREATED="1383574629023" MODIFIED="1383574634674">
<node TEXT="interfaces follow commutativity rule" ID="ID_1657425660" CREATED="1383574647038" MODIFIED="1383574655073">
<node TEXT="creat returns any FD instead of lowest FD" ID="ID_1122039629" CREATED="1383574710505" MODIFIED="1383574720924"/>
<node TEXT="posix_spawn vs fork+exec" ID="ID_1642461377" CREATED="1383574723600" MODIFIED="1383574735995"/>
<node TEXT="xstat vs stat" ID="ID_307114222" CREATED="1383574744983" MODIFIED="1383574748274"/>
</node>
<node TEXT="implementation guided by commuter" ID="ID_1968969326" CREATED="1383574655277" MODIFIED="1383574660504"/>
<node TEXT="99% of all test cases are conflict-free" ID="ID_1824947966" CREATED="1383574664004" MODIFIED="1383574696462"/>
<node TEXT="results" ID="ID_512333895" CREATED="1383574800955" MODIFIED="1383574802887">
<node TEXT="qmail-like mailserver" ID="ID_319853698" CREATED="1383574807147" MODIFIED="1383574813558"/>
<node TEXT="perfect linear scaling" ID="ID_632416875" CREATED="1383574813770" MODIFIED="1383574818621"/>
</node>
</node>
<node TEXT="Questions" ID="ID_125019190" CREATED="1383574871087" MODIFIED="1383574873530">
<node TEXT="why do python models make thngs easier to test?" ID="ID_331234601" CREATED="1383574874262" MODIFIED="1383574882874"/>
</node>
</node>
<node TEXT="Silo: Speedy Transactions" POSITION="left" ID="ID_1871913035" CREATED="1383575560785" MODIFIED="1383575567963">
<edge COLOR="#ff00ff"/>
<node TEXT="goals" ID="ID_1294674645" CREATED="1383575581519" MODIFIED="1383575583019">
<node TEXT="build high-troughput, in-memory, relational database" ID="ID_903269421" CREATED="1383575583488" MODIFIED="1383575595642"/>
<node TEXT="fully serializable transactions" ID="ID_1427612576" CREATED="1383575595854" MODIFIED="1383575603553"/>
<node TEXT="can recover from failures" ID="ID_1421810666" CREATED="1383575604878" MODIFIED="1383575609065"/>
</node>
<node TEXT="Intro" ID="ID_913408952" CREATED="1383575786009" MODIFIED="1383575787741">
<node TEXT="idea" ID="ID_567502880" CREATED="1383575691744" MODIFIED="1383575694083">
<node TEXT="use a scalable B-tree" ID="ID_1323633424" CREATED="1383575694904" MODIFIED="1383575702922">
<node TEXT="masstree" ID="ID_175671023" CREATED="1383576427655" MODIFIED="1383576430922"/>
</node>
<node TEXT="... build a database on top" ID="ID_1978022766" CREATED="1383575703135" MODIFIED="1383575707146"/>
</node>
<node TEXT="results" ID="ID_1299633346" CREATED="1383575709927" MODIFIED="1383575711058">
<node TEXT="scales well to 16 threads" ID="ID_1726223898" CREATED="1383575711615" MODIFIED="1383575717010"/>
<node TEXT="but not beyond" ID="ID_1805782655" CREATED="1383575717206" MODIFIED="1383575719642"/>
<node TEXT="bottleneck: atomic fetch-and-add to generate transaction id" ID="ID_751108156" CREATED="1383575719846" MODIFIED="1383575756399"/>
<node TEXT="thus, Silo does not need global TIDs" ID="ID_1768366799" CREATED="1383575799448" MODIFIED="1383575812180"/>
</node>
</node>
<node TEXT="secret sauce" ID="ID_1454867822" CREATED="1383575815688" MODIFIED="1383575819643">
<node TEXT="scalable and serializable transaction commit protocol" ID="ID_1408116425" CREATED="1383575820303" MODIFIED="1383575829450"/>
<node TEXT="memory contention only occurs when transactiosn coflict" ID="ID_1947801047" CREATED="1383575830631" MODIFIED="1383575839762"/>
<node TEXT="solution" ID="ID_1547680974" CREATED="1383575888283" MODIFIED="1383575890054">
<node TEXT="use time-based epochs" ID="ID_1022714510" CREATED="1383575890554" MODIFIED="1383575899462">
<node TEXT="recovery boundaries" ID="ID_585769970" CREATED="1383575916089" MODIFIED="1383575921036"/>
<node TEXT="serialization becomes a read (of the epoch number) instead of a write" ID="ID_1392164581" CREATED="1383575935696" MODIFIED="1383575947994"/>
</node>
<node TEXT="each txn gets an epoch and sequence number" ID="ID_842024209" CREATED="1383575899850" MODIFIED="1383575908670"/>
<node TEXT="each record contains TID (epoch+sequence number) of last writer" ID="ID_1292787105" CREATED="1383575957438" MODIFIED="1383575973937"/>
<node TEXT="TID rule" ID="ID_986293193" CREATED="1383575984405" MODIFIED="1383575987887">
<node TEXT="teake the smallest number in the current epoch that is larger than any number in the records we read" ID="ID_1478424186" CREATED="1383575988196" MODIFIED="1383576003279"/>
</node>
</node>
<node TEXT="commit protocol" ID="ID_437357365" CREATED="1383576015563" MODIFIED="1383576018326">
<node TEXT="idea" ID="ID_1738787691" CREATED="1383576065751" MODIFIED="1383576067362">
<node TEXT="idea: proceed as if records will not be modified" ID="ID_404507702" CREATED="1383576019898" MODIFIED="1383576028925"/>
<node TEXT="check at commit time whether they were modified" ID="ID_155771002" CREATED="1383576029113" MODIFIED="1383576038580"/>
<node TEXT="save TIDs in read-set during reads" ID="ID_342608837" CREATED="1383576043465" MODIFIED="1383576055619"/>
<node TEXT="writes go to local copy" ID="ID_159445057" CREATED="1383576055848" MODIFIED="1383576059187"/>
</node>
<node TEXT="phases" ID="ID_1363652661" CREATED="1383576071799" MODIFIED="1383576073554">
<node TEXT="lock" ID="ID_1440836621" CREATED="1383576075366" MODIFIED="1383576089777">
<node TEXT="lock (in global order) all records in write set" ID="ID_923592490" CREATED="1383576090102" MODIFIED="1383576098152"/>
</node>
<node TEXT="validate" ID="ID_178450" CREATED="1383576101429" MODIFIED="1383576102608">
<node TEXT="validate records in read set" ID="ID_1146411591" CREATED="1383576104380" MODIFIED="1383576109184"/>
<node TEXT="abort if record&apos;s TID changed during transsaction" ID="ID_1981971361" CREATED="1383576111460" MODIFIED="1383576121479"/>
<node TEXT="abort if record is locked by another transaction" ID="ID_1262347077" CREATED="1383576121986" MODIFIED="1383576130526"/>
</node>
<node TEXT="commit" ID="ID_91599097" CREATED="1383576132147" MODIFIED="1383576135254">
<node TEXT="pick a TID and perform writes" ID="ID_1244394824" CREATED="1383576135723" MODIFIED="1383576143405"/>
</node>
</node>
</node>
<node TEXT="returning results" ID="ID_1447797311" CREATED="1383576196342" MODIFIED="1383576199242">
<node TEXT="cannot return from a transaction before prior epochs completed" ID="ID_736938145" CREATED="1383576199646" MODIFIED="1383576210201"/>
</node>
</node>
<node TEXT="results" ID="ID_279538796" CREATED="1383576507042" MODIFIED="1383576508477">
<node TEXT="benchmarks" ID="ID_14183942" CREATED="1383576541280" MODIFIED="1383576545355">
<node TEXT="TPC-C online retail store benchmark" ID="ID_1585533306" CREATED="1383576545759" MODIFIED="1383576553466"/>
<node TEXT="YCSB (yahoo key-value store)" ID="ID_273984116" CREATED="1383576572069" MODIFIED="1383576586400"/>
<node TEXT="on a recent 32-core machine" ID="ID_1396344696" CREATED="1383576557991" MODIFIED="1383576566777"/>
</node>
<node TEXT="linear scaling" ID="ID_353309623" CREATED="1383576610723" MODIFIED="1383576619045">
<node TEXT="works well up to 28 threads" ID="ID_1807582967" CREATED="1383576619827" MODIFIED="1383576625453"/>
<node TEXT="even up to 32 threads if using tmpfs instead of durable storage" ID="ID_672634883" CREATED="1383576625682" MODIFIED="1383576640012"/>
</node>
<node TEXT="several times faster than state of the art" ID="ID_1450230229" CREATED="1383576652392" MODIFIED="1383576658579"/>
<node TEXT="transactions have little overhead" ID="ID_130237597" CREATED="1383576710565" MODIFIED="1383576717943">
<node TEXT="only 4% slower than doing key-value updates without transactions" ID="ID_196554118" CREATED="1383576718652" MODIFIED="1383576734102"/>
</node>
<node TEXT="secret sauce matters" ID="ID_720650340" CREATED="1383576751874" MODIFIED="1383576756149">
<node TEXT="other approaches bottleneck on TID generation" ID="ID_1201319968" CREATED="1383576757817" MODIFIED="1383576770012"/>
<node TEXT="... at about 16 threads on their machine" ID="ID_248624838" CREATED="1383576772032" MODIFIED="1383576778283"/>
</node>
</node>
<node TEXT="fork" ID="ID_1074087316" CREATED="1383576835491" MODIFIED="1383576836623">
<node TEXT="https://github.com/stephentu/silo" ID="ID_954892778" CREATED="1383576837012" MODIFIED="1383576849102"/>
</node>
<node TEXT="Questions" ID="ID_897582945" CREATED="1383576978603" MODIFIED="1383576994293">
<node TEXT="epochs trade throughput for latency" ID="ID_172759385" CREATED="1383576980466" MODIFIED="1383576991989"/>
</node>
</node>
<node TEXT="Everything you wanted to know about synchronization" POSITION="left" ID="ID_1947615017" CREATED="1383577250040" MODIFIED="1383577262491">
<edge COLOR="#00ffff"/>
<node TEXT="intro" ID="ID_1409449412" CREATED="1383577270231" MODIFIED="1383577271394">
<node TEXT="multicore is important" ID="ID_155738566" CREATED="1383577271935" MODIFIED="1383577275266"/>
<node TEXT="synchronization is a scalability bottleneck" ID="ID_624476846" CREATED="1383577297557" MODIFIED="1383577305400"/>
<node TEXT="does not refer to previous talks" ID="ID_708210160" CREATED="1383577347754" MODIFIED="1383577364885">
<icon BUILTIN="smily_bad"/>
</node>
<node TEXT="paper answers the question: what is the main source of scalability problems?" ID="ID_198319374" CREATED="1383577429964" MODIFIED="1383577455382"/>
<node TEXT="answer: scalability is a hardware problem" ID="ID_1825492899" CREATED="1383577455635" MODIFIED="1383577463230"/>
</node>
<node TEXT="experiments" ID="ID_436812819" CREATED="1383577590458" MODIFIED="1383577592917">
<node TEXT="hardware platforms" ID="ID_1205543152" CREATED="1383577595713" MODIFIED="1383577604708">
<node TEXT="AMD opteron 8-socket 48 core" ID="ID_234681924" CREATED="1383577605033" MODIFIED="1383577617355"/>
<node TEXT="Intel Xeon 8-socket 80 cores" ID="ID_75604148" CREATED="1383577618896" MODIFIED="1383577627843"/>
<node TEXT="Sun Niagara 2 (8 cores)" ID="ID_251277727" CREATED="1383577628047" MODIFIED="1383577636322"/>
<node TEXT="Tilera 36 cores" ID="ID_1417294104" CREATED="1383577636510" MODIFIED="1383577642178"/>
</node>
<node TEXT="synchronization layers" ID="ID_1038769361" CREATED="1383577644350" MODIFIED="1383577653593">
<node TEXT="software" ID="ID_1941572990" CREATED="1383577656581" MODIFIED="1383577658609">
<node TEXT="apps (e.g., hash table)" ID="ID_1719671621" CREATED="1383577662957" MODIFIED="1383577668792"/>
<node TEXT="lock algorithms" ID="ID_207800177" CREATED="1383577669029" MODIFIED="1383577671744"/>
</node>
<node TEXT="hardware" ID="ID_1509444925" CREATED="1383577658773" MODIFIED="1383577660609">
<node TEXT="atomic ops" ID="ID_1234107280" CREATED="1383577672980" MODIFIED="1383577675583"/>
<node TEXT="cache coherence protocols" ID="ID_231629736" CREATED="1383577675804" MODIFIED="1383577680687"/>
</node>
</node>
</node>
<node TEXT="key observations" ID="ID_1888183674" CREATED="1383577465002" MODIFIED="1383577468325">
<node TEXT="crossing sockets is expensive" ID="ID_1384024026" CREATED="1383577468914" MODIFIED="1383577475541">
<node TEXT="transfering a cache line across sockets is 8x more expensive than accessing it locally" ID="ID_848852580" CREATED="1383577475898" MODIFIED="1383577757738"/>
<node TEXT="Opteron" ID="ID_1539218890" CREATED="1383577722833" MODIFIED="1383577726549">
<node TEXT="within socket: 40ns" ID="ID_591667036" CREATED="1383577707770" MODIFIED="1383577711613"/>
<node TEXT="per hop: +40ns" ID="ID_1157744843" CREATED="1383577711825" MODIFIED="1383577720429"/>
</node>
<node TEXT="Xeon" ID="ID_1189558641" CREATED="1383577729833" MODIFIED="1383577731972">
<node TEXT="within socket: 20-40 ns" ID="ID_1321630561" CREATED="1383577732920" MODIFIED="1383577741475"/>
<node TEXT="per hop: +50 ns" ID="ID_506840469" CREATED="1383577741888" MODIFIED="1383577747755"/>
</node>
<node TEXT="Lock and Hashtable experiments" ID="ID_821675519" CREATED="1383577928771" MODIFIED="1383577935758">
<node TEXT="show negative scalability on Xeon" ID="ID_1252172188" CREATED="1383577936251" MODIFIED="1383577943366"/>
<node TEXT="show no or little scalability (beyond socket) on Opteron" ID="ID_1796828031" CREATED="1383577943570" MODIFIED="1383577955885"/>
</node>
</node>
<node TEXT="sharing within sockets is necessary, but not sufficient" ID="ID_188055782" CREATED="1383577494656" MODIFIED="1383577504067">
<node TEXT="broadcasts to all sockets can happen even if the data is local" ID="ID_862972993" CREATED="1383578019318" MODIFIED="1383578032656"/>
<node TEXT="... because the coherency protocol might not be sure that the data is local" ID="ID_306282831" CREATED="1383578032876" MODIFIED="1383578047631"/>
</node>
<node TEXT="intra-socket uniformity matters" ID="ID_1676380648" CREATED="1383577505736" MODIFIED="1383577514402">
<node TEXT="uniform cores (e.g., niagara) scale up to 70% better than non-uniform ones (e.g., tilera)" ID="ID_1426877804" CREATED="1383578475103" MODIFIED="1383578492177"/>
</node>
<node TEXT="loads/stores can be as expensive as atomic operations" ID="ID_1708948307" CREATED="1383577514671" MODIFIED="1383577525929">
<node TEXT="if data is local" ID="ID_95831762" CREATED="1383578329281" MODIFIED="1383578332372">
<node TEXT="CAS is 10x more expensive than load/store" ID="ID_1526322528" CREATED="1383578332679" MODIFIED="1383578339899"/>
</node>
<node TEXT="if data is remote" ID="ID_1422040161" CREATED="1383578341320" MODIFIED="1383578345779">
<node TEXT="CAS only 35% more expensive than load/store" ID="ID_524615033" CREATED="1383578346479" MODIFIED="1383578359602"/>
</node>
</node>
<node TEXT="simple locks are often fastest" ID="ID_605040988" CREATED="1383577545069" MODIFIED="1383577552960">
<node TEXT="spinlock perform best in 25/32 experiments" ID="ID_1878702803" CREATED="1383578431098" MODIFIED="1383578440533"/>
</node>
</node>
</node>
<node TEXT="Dandelion" POSITION="left" ID="ID_1851817429" CREATED="1383581059504" MODIFIED="1383581061603">
<edge COLOR="#ffff00"/>
<node TEXT="intro" ID="ID_1412104448" CREATED="1383581066871" MODIFIED="1383581068634">
<node TEXT="want to improve programmability for heterogeneous distributed systems" ID="ID_1793718321" CREATED="1383581068991" MODIFIED="1383581085009"/>
<node TEXT="challenges" ID="ID_1940424689" CREATED="1383581103181" MODIFIED="1383581105144">
<node TEXT="heterogeneity" ID="ID_1482012597" CREATED="1383581105700" MODIFIED="1383581108392"/>
<node TEXT="distributed resources" ID="ID_1855196704" CREATED="1383581108820" MODIFIED="1383581115439">
<node TEXT="scheduling" ID="ID_832552203" CREATED="1383581115836" MODIFIED="1383581117887"/>
<node TEXT="data movement" ID="ID_339976397" CREATED="1383581121156" MODIFIED="1383581123111"/>
</node>
<node TEXT="concurrency" ID="ID_763775279" CREATED="1383581124755" MODIFIED="1383581129263">
<node TEXT="synchronization" ID="ID_1834622727" CREATED="1383581129627" MODIFIED="1383581134070"/>
</node>
</node>
<node TEXT="goal" ID="ID_1446233456" CREATED="1383581137203" MODIFIED="1383581138134">
<node TEXT="single programming interface for clusters" ID="ID_1548180540" CREATED="1383581138466" MODIFIED="1383581144846"/>
<node TEXT="programmers write sequential code" ID="ID_856644282" CREATED="1383581147874" MODIFIED="1383581152533"/>
<node TEXT="runtime does everything else" ID="ID_880946270" CREATED="1383581152745" MODIFIED="1383581156333"/>
</node>
</node>
<node TEXT="dandelion" ID="ID_178935178" CREATED="1383581174832" MODIFIED="1383581177587">
<node TEXT="offload data-parallel code fragments" ID="ID_659138842" CREATED="1383581178776" MODIFIED="1383581186075"/>
<node TEXT="starts from LINQ queries" ID="ID_90446141" CREATED="1383581186263" MODIFIED="1383581192219"/>
</node>
<node TEXT="architecture" ID="ID_991710224" CREATED="1383581205742" MODIFIED="1383581207873">
<node TEXT="user program" ID="ID_1427235921" CREATED="1383581211222" MODIFIED="1383581214817">
<node TEXT="in this case, a LINQ query" ID="ID_966084715" CREATED="1383581371347" MODIFIED="1383581376854"/>
<node TEXT="gets compiled by dandelion compiler" ID="ID_551370679" CREATED="1383581215173" MODIFIED="1383581220840"/>
<node TEXT="produces three data-flow graphs" ID="ID_65983614" CREATED="1383581221044" MODIFIED="1383581227480">
<node TEXT="cluster-scale" ID="ID_76099385" CREATED="1383581227725" MODIFIED="1383581229768"/>
<node TEXT="machine-scale" ID="ID_1184670832" CREATED="1383581229996" MODIFIED="1383581233439"/>
<node TEXT="GPU-scale" ID="ID_1139574238" CREATED="1383581233660" MODIFIED="1383581236991"/>
</node>
<node TEXT="produces vertex worker code (CPU and GPU)" ID="ID_1152433286" CREATED="1383581240540" MODIFIED="1383581250278"/>
</node>
<node TEXT="runtimes" ID="ID_1660634492" CREATED="1383581252019" MODIFIED="1383581256718">
<node TEXT="cluster runtime" ID="ID_1593665679" CREATED="1383581257098" MODIFIED="1383581259165">
<node TEXT="maps vertices from cluster dataflow graph to machines" ID="ID_101828251" CREATED="1383581278097" MODIFIED="1383581286732"/>
</node>
<node TEXT="machine runtime" ID="ID_1468430251" CREATED="1383581259378" MODIFIED="1383581261830"/>
<node TEXT="GPU runtime" ID="ID_1441300029" CREATED="1383581262050" MODIFIED="1383581264214"/>
</node>
</node>
<node TEXT="example" ID="ID_1857540001" CREATED="1383581463941" MODIFIED="1383581465648">
<node TEXT="k-means" ID="ID_716532467" CREATED="1383581465956" MODIFIED="1383581467824"/>
<node TEXT="group points by nearest center" ID="ID_1334505376" CREATED="1383581468036" MODIFIED="1383581482399"/>
<node TEXT="new centroids = average" ID="ID_690177443" CREATED="1383581482611" MODIFIED="1383581493638"/>
<node TEXT="can easily parallelize aggregation for the new centroid" ID="ID_1499872270" CREATED="1383581495395" MODIFIED="1383581507333"/>
<node TEXT="less obvious how to parallelize the grouping" ID="ID_880952353" CREATED="1383581507546" MODIFIED="1383581515733"/>
</node>
<node TEXT="grouping on a GPU" ID="ID_1675849118" CREATED="1383581657776" MODIFIED="1383581661227">
<node TEXT="grouping is similar to sorting" ID="ID_409924330" CREATED="1383581661767" MODIFIED="1383581669706"/>
<node TEXT="output offset of an element is group offset + group order" ID="ID_120301644" CREATED="1383581684118" MODIFIED="1383581696065">
<node TEXT="but how to know group offset?" ID="ID_173762397" CREATED="1383581696373" MODIFIED="1383581701592"/>
</node>
<node TEXT="GPU grouping uses multiple stages" ID="ID_1890829428" CREATED="1383581705453" MODIFIED="1383581712336">
<node TEXT="first stage: find number of groups" ID="ID_1460979021" CREATED="1383581712628" MODIFIED="1383581721543">
<node TEXT="uses a lock-free GPU hash table" ID="ID_516691553" CREATED="1383581821437" MODIFIED="1383581826608"/>
</node>
<node TEXT="second: compute group sizes" ID="ID_1101953079" CREATED="1383581721755" MODIFIED="1383581729534"/>
<node TEXT="third: compute start indexes" ID="ID_96756416" CREATED="1383581730099" MODIFIED="1383581736750">
<node TEXT="prefix sum of group sizes" ID="ID_62637383" CREATED="1383581737075" MODIFIED="1383581745461"/>
</node>
<node TEXT="fourth: group in parallel" ID="ID_1523778754" CREATED="1383581746842" MODIFIED="1383581757709"/>
</node>
</node>
<node TEXT="dandelion compiler" ID="ID_1093482677" CREATED="1383581795623" MODIFIED="1383581799433">
<node TEXT="has a library of generic primitives" ID="ID_134936878" CREATED="1383581799854" MODIFIED="1383581809281">
<node TEXT="hash tables" ID="ID_335014353" CREATED="1383581809630" MODIFIED="1383581813665"/>
<node TEXT="prefix sum" ID="ID_634674612" CREATED="1383581813901" MODIFIED="1383581816568"/>
<node TEXT="..." ID="ID_589483692" CREATED="1383581816950" MODIFIED="1383581819017"/>
</node>
<node TEXT="composes primitives to build LINQ operations" ID="ID_1122238249" CREATED="1383581850979" MODIFIED="1383581858838"/>
<node TEXT="compiling C# to GPU" ID="ID_1144188628" CREATED="1383581900576" MODIFIED="1383581908275">
<node TEXT="need to map C# types to CUDA structs" ID="ID_1151019038" CREATED="1383581908735" MODIFIED="1383581917754"/>
<node TEXT="need to translate C# methods to CUDA kernel functions" ID="ID_1069976435" CREATED="1383581917999" MODIFIED="1383581931960"/>
<node TEXT="Need to generate marshalling code" ID="ID_1316410707" CREATED="1383581935358" MODIFIED="1383581940905"/>
<node TEXT="main constraints" ID="ID_880960851" CREATED="1383581945157" MODIFIED="1383581947944">
<node TEXT="cannot use dynamic memory allocation" ID="ID_1701946667" CREATED="1383581948228" MODIFIED="1383581954495"/>
</node>
</node>
</node>
<node TEXT="lazy evaluation" ID="ID_951195370" CREATED="1383582031103" MODIFIED="1383582035602">
<node TEXT="Dandelion only runs once that results are needed" ID="ID_1813814085" CREATED="1383582035894" MODIFIED="1383582045073"/>
</node>
<node TEXT="Results" ID="ID_1151754007" CREATED="1383582067908" MODIFIED="1383582069591">
<node TEXT="improved programmability?" ID="ID_1793291836" CREATED="1383582073980" MODIFIED="1383582082295">
<node TEXT="K-means is 20 LOC in C#" ID="ID_1361778115" CREATED="1383582117202" MODIFIED="1383582145323"/>
<node TEXT="Dandelion code is almost equal to regular C# code" ID="ID_404141812" CREATED="1383582145704" MODIFIED="1383582159626"/>
</node>
<node TEXT="performance?" ID="ID_654827244" CREATED="1383582083787" MODIFIED="1383582086283">
<node TEXT="native C# (even multithreaded) is slow" ID="ID_1840558244" CREATED="1383582209955" MODIFIED="1383582220782"/>
<node TEXT="hand-tuned CUDA is fast (100x speedup)" ID="ID_1057548594" CREATED="1383582221010" MODIFIED="1383582234221"/>
<node TEXT="dandelion achieves around 17x speedup" ID="ID_1586007798" CREATED="1383582234761" MODIFIED="1383582248724">
<node TEXT="2-7x slower than hand-tuned CUDA" ID="ID_838697690" CREATED="1383582255369" MODIFIED="1383582263995"/>
</node>
<node TEXT="dandelion GPU is often 2x faster than multi-thread CPU" ID="ID_1340857067" CREATED="1383582472570" MODIFIED="1383582487125"/>
</node>
</node>
</node>
<node TEXT="Sparrow" POSITION="left" ID="ID_723688622" CREATED="1383583130937" MODIFIED="1383583132709">
<edge COLOR="#7c0000"/>
<node TEXT="goal" ID="ID_1754974982" CREATED="1383583137473" MODIFIED="1383583141364">
<node TEXT="achieve hich scheduling throughput" ID="ID_1804020449" CREATED="1383583141824" MODIFIED="1383583148124"/>
<node TEXT="hard to do with centralized schedulers" ID="ID_186615012" CREATED="1383583148336" MODIFIED="1383583154571">
<node TEXT="but centralized schedulers have global visibility" ID="ID_929791034" CREATED="1383583163959" MODIFIED="1383583175130"/>
<node TEXT="thus, can do a quality placement" ID="ID_604458038" CREATED="1383583175678" MODIFIED="1383583182289"/>
</node>
</node>
<node TEXT="idea" ID="ID_775860424" CREATED="1383583188845" MODIFIED="1383583189945">
<node TEXT="completely decentralized schedulers" ID="ID_479428726" CREATED="1383583190453" MODIFIED="1383583196688">
<node TEXT="low latency" ID="ID_628435986" CREATED="1383583205828" MODIFIED="1383583211231"/>
<node TEXT="fault tolerant" ID="ID_916477609" CREATED="1383583211452" MODIFIED="1383583213927"/>
<node TEXT="high throughput" ID="ID_1969325901" CREATED="1383583214156" MODIFIED="1383583218559"/>
<node TEXT="quality placement" ID="ID_643755187" CREATED="1383583218787" MODIFIED="1383583230792">
<icon BUILTIN="help"/>
</node>
</node>
<node TEXT="use randomization" ID="ID_472788002" CREATED="1383583251512" MODIFIED="1383583257300"/>
<node TEXT="key techniques" ID="ID_384324765" CREATED="1383583257505" MODIFIED="1383583259996">
<node TEXT="batch sampling" ID="ID_1671564334" CREATED="1383583260385" MODIFIED="1383583263332"/>
<node TEXT="late binding" ID="ID_607273599" CREATED="1383583263689" MODIFIED="1383583265324"/>
</node>
</node>
<node TEXT="architecture" ID="ID_339182887" CREATED="1383583308214" MODIFIED="1383583312248">
<node TEXT="schedulers know nothing (initially) about workers" ID="ID_1031161143" CREATED="1383583316245" MODIFIED="1383583326960"/>
<node TEXT="workers have a queue" ID="ID_1863798858" CREATED="1383583327236" MODIFIED="1383583333119"/>
<node TEXT="ideas" ID="ID_1989990037" CREATED="1383583397016" MODIFIED="1383583398227">
<node TEXT="randomization" ID="ID_713044689" CREATED="1383583335436" MODIFIED="1383583406771">
<node TEXT="assign task to random worker" ID="ID_500656878" CREATED="1383583344499" MODIFIED="1383583350062"/>
<node TEXT="performs well at low load" ID="ID_650842000" CREATED="1383583350283" MODIFIED="1383583364405">
<node TEXT="say, up to 10%" ID="ID_1385257812" CREATED="1383583364713" MODIFIED="1383583375468"/>
</node>
<node TEXT="response times get higher as load increases" ID="ID_268483640" CREATED="1383583383528" MODIFIED="1383583390555"/>
</node>
<node TEXT="power of two choices" ID="ID_1448212229" CREATED="1383583411462" MODIFIED="1383583414306">
<node TEXT="scheduler asks two workers for their load" ID="ID_175706668" CREATED="1383583414694" MODIFIED="1383583425105"/>
<node TEXT="gives task to less-loaded worker" ID="ID_1240548257" CREATED="1383583425310" MODIFIED="1383583435928"/>
<node TEXT="performs a bit better than random" ID="ID_666556775" CREATED="1383583437509" MODIFIED="1383583459847">
<node TEXT="but doesn&apos;t work well with large #tasks per job" ID="ID_655178557" CREATED="1383583462579" MODIFIED="1383583473958"/>
</node>
</node>
<node TEXT="batch sampling" ID="ID_1040544327" CREATED="1383583477234" MODIFIED="1383583505996">
<node TEXT="share probe information across tasks" ID="ID_243738347" CREATED="1383583507480" MODIFIED="1383583517235"/>
<node TEXT="does not suffer from per-task-sampling scalability issues" ID="ID_1477663487" CREATED="1383583522951" MODIFIED="1383583538954"/>
<node TEXT="still has problems" ID="ID_92040023" CREATED="1383583551061" MODIFIED="1383583553593">
<node TEXT="queue length does not predict wait time very well" ID="ID_690852697" CREATED="1383583554020" MODIFIED="1383583562672"/>
<node TEXT="thus, performs badly on heterogeneous tasks" ID="ID_1832424039" CREATED="1383583578851" MODIFIED="1383583588750"/>
<node TEXT="and it&apos;s hard to predict job length" ID="ID_1333532497" CREATED="1383583612953" MODIFIED="1383583626332"/>
</node>
</node>
<node TEXT="late binding" ID="ID_1140408989" CREATED="1383583628944" MODIFIED="1383583630779">
<node TEXT="probes are queued at worker" ID="ID_1050144366" CREATED="1383583636056" MODIFIED="1383583691991"/>
<node TEXT="worker responds to probe when it&apos;s ready" ID="ID_423821700" CREATED="1383583679109" MODIFIED="1383583686128"/>
<node TEXT="scheduler only releases tasks when probed workers are ready" ID="ID_1061611021" CREATED="1383583652583" MODIFIED="1383583675169"/>
</node>
</node>
</node>
<node TEXT="handling constraints" ID="ID_1699642155" CREATED="1383583740505" MODIFIED="1383583744796">
<node TEXT="per-jobs constraints are easy" ID="ID_1101478836" CREATED="1383583746680" MODIFIED="1383583751787">
<node TEXT="just probe only nodes that satisfy constraints" ID="ID_1098046149" CREATED="1383583752144" MODIFIED="1383583759947"/>
</node>
<node TEXT="per-task constraints are possible" ID="ID_799335419" CREATED="1383583761664" MODIFIED="1383583766763">
<node TEXT="need a sufficient number of probes" ID="ID_1362362007" CREATED="1383583790565" MODIFIED="1383583800800"/>
</node>
</node>
<node TEXT="results" ID="ID_1170499363" CREATED="1383583935076" MODIFIED="1383583937191">
<node TEXT="sparrow can handle very many low-duration tasks" ID="ID_1584314638" CREATED="1383583937612" MODIFIED="1383583949574">
<node TEXT="whereas native spark scheduler is limited" ID="ID_1539521664" CREATED="1383583953211" MODIFIED="1383583965749"/>
</node>
<node TEXT="sparrow gets good results" ID="ID_402547712" CREATED="1383584027678" MODIFIED="1383584035665">
<node TEXT="within 12% of some hypothetic ideal scheduler" ID="ID_62379531" CREATED="1383584035996" MODIFIED="1383584047752"/>
</node>
<node TEXT="sparrows scales up to approx 80% load" ID="ID_1389019138" CREATED="1383584097721" MODIFIED="1383584109676">
<node TEXT="beyond that, global visibility becomes essential" ID="ID_542086539" CREATED="1383584111152" MODIFIED="1383584121323"/>
<node TEXT="but such high loads are rare in practice" ID="ID_946752626" CREATED="1383584121575" MODIFIED="1383584127642"/>
<node TEXT="but sparrow degrades gracefully" ID="ID_553777243" CREATED="1383584141518" MODIFIED="1383584149305"/>
</node>
</node>
<node TEXT="Questions" ID="ID_1694083798" CREATED="1383584171924" MODIFIED="1383584213240">
<node TEXT="all these talks had related work slides at the end..." ID="ID_648887260" CREATED="1383584174836" MODIFIED="1383584183023"/>
</node>
<node TEXT="http://github.com/radlab/sparrow" ID="ID_1451348260" CREATED="1383584305275" MODIFIED="1383584312982"/>
</node>
<node TEXT="Timecard" POSITION="left" ID="ID_1683521060" CREATED="1383584755326" MODIFIED="1383584757141">
<edge COLOR="#00007c"/>
<node TEXT="goal" ID="ID_1875344526" CREATED="1383584816490" MODIFIED="1383584820060">
<node TEXT="control end-to-end user-perceived delays" ID="ID_924829790" CREATED="1383584820433" MODIFIED="1383584829619"/>
<node TEXT="response time matters" ID="ID_1458511352" CREATED="1383584841664" MODIFIED="1383584844883">
<node TEXT="we&apos;ve all seen those spinners..." ID="ID_1231797895" CREATED="1383584845168" MODIFIED="1383584851163"/>
<node TEXT="interestingly, only maximal request time determines user-perceived delay" ID="ID_89168559" CREATED="1383584858199" MODIFIED="1383584878401"/>
</node>
</node>
<node TEXT="delay components" ID="ID_667084814" CREATED="1383584883125" MODIFIED="1383584886112">
<node TEXT="app processing" ID="ID_1179547884" CREATED="1383584887036" MODIFIED="1383584890696"/>
<node TEXT="request transfer" ID="ID_981142955" CREATED="1383584890908" MODIFIED="1383584894232"/>
<node TEXT="server response time" ID="ID_273286993" CREATED="1383584894452" MODIFIED="1383584897471">
<node TEXT="this, you can control" ID="ID_67864199" CREATED="1383584897836" MODIFIED="1383584904376">
<icon BUILTIN="yes"/>
</node>
</node>
</node>
<node TEXT="today..." ID="ID_837222465" CREATED="1383584923786" MODIFIED="1383584926469">
<node TEXT="there are SLAs that control server delays" ID="ID_932391572" CREATED="1383584926906" MODIFIED="1383584934141"/>
<node TEXT="servers can trade-off between quality and delay" ID="ID_1709505990" CREATED="1383584938593" MODIFIED="1383584950476">
<node TEXT="e.g., by aggregating responses from multiple workers" ID="ID_1029180927" CREATED="1383584957864" MODIFIED="1383584969282"/>
<node TEXT="more workers answer within deadline -&gt; more precision" ID="ID_921225757" CREATED="1383584969487" MODIFIED="1383584980802"/>
</node>
<node TEXT="problems" ID="ID_663495899" CREATED="1383584987342" MODIFIED="1383584988649">
<node TEXT="external delays are highly variable" ID="ID_1120970275" CREATED="1383584988917" MODIFIED="1383584996769">
<node TEXT="AppInsight from OSDI 2012" ID="ID_1481559866" CREATED="1383584997189" MODIFIED="1383585004104"/>
<node TEXT="e.g., network delay different on WiFi, 3G, ..." ID="ID_969120500" CREATED="1383585014980" MODIFIED="1383585027599"/>
</node>
<node TEXT="thus, servers should consider external delay" ID="ID_179210381" CREATED="1383585046098" MODIFIED="1383585055413">
<node TEXT="that is, target an end-to-end deadline" ID="ID_1419244577" CREATED="1383585055713" MODIFIED="1383585064028"/>
</node>
</node>
</node>
<node TEXT="timecard architecture" ID="ID_562658471" CREATED="1383585078968" MODIFIED="1383585084507">
<node TEXT="server gets" ID="ID_1782546194" CREATED="1383585084855" MODIFIED="1383585088595">
<node TEXT="elapsed time so far" ID="ID_851617117" CREATED="1383585089079" MODIFIED="1383585102369">
<node TEXT="includes request transfer delay" ID="ID_1860793725" CREATED="1383585113006" MODIFIED="1383585121009"/>
</node>
<node TEXT="prediction of remaining time" ID="ID_74813526" CREATED="1383585105302" MODIFIED="1383585108897">
<node TEXT="estimates response transfer delay" ID="ID_399646884" CREATED="1383585122853" MODIFIED="1383585128704"/>
<node TEXT="estimates app response processing" ID="ID_1263689802" CREATED="1383585156371" MODIFIED="1383585162229"/>
</node>
</node>
<node TEXT="challenges" ID="ID_1383127439" CREATED="1383585166554" MODIFIED="1383585174852">
<node TEXT="many unpredictable events" ID="ID_1015507056" CREATED="1383585184985" MODIFIED="1383585191996">
<node TEXT="e.g., time to get GPS coordinates" ID="ID_525479153" CREATED="1383585192304" MODIFIED="1383585201051"/>
</node>
<node TEXT="need to track transaction across threads/events" ID="ID_386585746" CREATED="1383585281611" MODIFIED="1383585295413"/>
<node TEXT="no clock synchronization" ID="ID_1645098477" CREATED="1383585206000" MODIFIED="1383585214098"/>
</node>
<node TEXT="how to use" ID="ID_1889950293" CREATED="1383585238581" MODIFIED="1383585240552">
<node TEXT="on server side, include DLL, use API" ID="ID_1945643024" CREATED="1383585240861" MODIFIED="1383585248480"/>
<node TEXT="on client side, no changes" ID="ID_1762040486" CREATED="1383585248941" MODIFIED="1383585256459">
<icon BUILTIN="yes"/>
<node TEXT="instrumentation adds information automatically to requests" ID="ID_1007933281" CREATED="1383585257356" MODIFIED="1383585268918"/>
</node>
</node>
<node TEXT="solutions" ID="ID_136587967" CREATED="1383585303257" MODIFIED="1383585305748">
<node TEXT="transaction context" ID="ID_651871054" CREATED="1383585306057" MODIFIED="1383585314212">
<node TEXT="attached to every transaction" ID="ID_1913744334" CREATED="1383585314736" MODIFIED="1383585326323"/>
<node TEXT="passed between threads/callbacks/..." ID="ID_1116218702" CREATED="1383585326543" MODIFIED="1383585333914"/>
<node TEXT="passed from app to server" ID="ID_685597152" CREATED="1383585334639" MODIFIED="1383585338770">
<node TEXT="using a special HTTP header" ID="ID_1302798484" CREATED="1383585339063" MODIFIED="1383585343650"/>
</node>
<node TEXT="API calls inspect TC to estimate delays" ID="ID_1908761234" CREATED="1383585371292" MODIFIED="1383585382975"/>
</node>
<node TEXT="TimeSync" ID="ID_389162802" CREATED="1383585385219" MODIFIED="1383585389870">
<node TEXT="for servers, clock synchronization is easy" ID="ID_960473202" CREATED="1383585390395" MODIFIED="1383585400038"/>
<node TEXT="mobiles could use the phone&apos;s GPS" ID="ID_576697709" CREATED="1383585400427" MODIFIED="1383585408845">
<node TEXT="but doesn&apos;t work indoors" ID="ID_8227687" CREATED="1383585409138" MODIFIED="1383585422348">
<icon BUILTIN="smily_bad"/>
</node>
</node>
<node TEXT="solution: server acts as NTP server" ID="ID_1508556556" CREATED="1383585428897" MODIFIED="1383585437667"/>
<node TEXT="challenge: mobile network links are not symmetric" ID="ID_687879952" CREATED="1383585445088" MODIFIED="1383585456786">
<node TEXT="because of phone microsleeps" ID="ID_552571412" CREATED="1383585469285" MODIFIED="1383585476977"/>
<node TEXT="introduces radio transmitter wake-up delay" ID="ID_1010899169" CREATED="1383585484973" MODIFIED="1383585494816"/>
<node TEXT="solution: predict when radio is up" ID="ID_1066737047" CREATED="1383585495204" MODIFIED="1383585509847"/>
<node TEXT="challenge: require radio to be up *and idle*" ID="ID_1128700110" CREATED="1383585510075" MODIFIED="1383585528118"/>
</node>
</node>
<node TEXT="predicting downlink delay" ID="ID_1024331812" CREATED="1383585706318" MODIFIED="1383585711177">
<node TEXT="analysis of 4000 apps" ID="ID_950111147" CREATED="1383585716966" MODIFIED="1383585723185"/>
<node TEXT="latency, not throughput, dominates downlink delay" ID="ID_1579569909" CREATED="1383585726989" MODIFIED="1383585740807">
<node TEXT="only need to predict RTT and #roundtrips" ID="ID_88065950" CREATED="1383585777610" MODIFIED="1383585786988"/>
</node>
<node TEXT="TCP window state at server matters" ID="ID_571982250" CREATED="1383585746803" MODIFIED="1383585754862">
<node TEXT="can response fit in a single window?" ID="ID_315114756" CREATED="1383585763643" MODIFIED="1383585770469"/>
<node TEXT="problem: middleboxes!" ID="ID_1689329185" CREATED="1383585826990" MODIFIED="1383585835497">
<node TEXT="need to predict middlebox window size" ID="ID_1122794220" CREATED="1383585836174" MODIFIED="1383585859520"/>
</node>
</node>
<node TEXT="solution" ID="ID_1464789802" CREATED="1383585797488" MODIFIED="1383585798795">
<node TEXT="decision tree model" ID="ID_220669239" CREATED="1383585876443" MODIFIED="1383585880870"/>
<node TEXT="predict RTT from TimeSync probes" ID="ID_435514472" CREATED="1383585799087" MODIFIED="1383585805507"/>
<node TEXT="predict #roundtrips from TCP window states" ID="ID_1353359974" CREATED="1383585805712" MODIFIED="1383585819042"/>
<node TEXT="use #bytes transferred so far to predict middlebox TCP state" ID="ID_1264801031" CREATED="1383585886506" MODIFIED="1383585904980"/>
</node>
</node>
</node>
<node TEXT="results" ID="ID_554759371" CREATED="1383585926560" MODIFIED="1383585928227">
<node TEXT="error for downlink delay" ID="ID_1365503719" CREATED="1383585928615" MODIFIED="1383585953809">
<node TEXT="12ms median" ID="ID_630992360" CREATED="1383585939599" MODIFIED="1383585947498"/>
</node>
<node TEXT="runtime overhead" ID="ID_797328387" CREATED="1383586149704" MODIFIED="1383586152812">
<node TEXT="0.1% only" ID="ID_454988897" CREATED="1383586153329" MODIFIED="1383586156796"/>
<node TEXT="negligible server and battery overhead" ID="ID_1089250106" CREATED="1383586157416" MODIFIED="1383586163658"/>
</node>
</node>
<node TEXT="limitations" ID="ID_1148441265" CREATED="1383586172303" MODIFIED="1383586174034">
<node TEXT="bootstrapping for new apps" ID="ID_1958762176" CREATED="1383586174431" MODIFIED="1383586180338">
<node TEXT="solution: turn off adaptation until we have enough prediction data" ID="ID_748649647" CREATED="1383586180671" MODIFIED="1383586192298"/>
</node>
<node TEXT="complex transactions" ID="ID_636470365" CREATED="1383586195734" MODIFIED="1383586199345"/>
</node>
</node>
</node>
<node TEXT="Dynamic Binary Translation" POSITION="left" ID="ID_1129396542" CREATED="1383591788785" MODIFIED="1383591804532">
<edge COLOR="#007c00"/>
<node TEXT="intro" ID="ID_170538328" CREATED="1383591807168" MODIFIED="1383591809587">
<node TEXT="what is DBT?" ID="ID_1366573267" CREATED="1383591852221" MODIFIED="1383591858496">
<node TEXT="dispatcher translates one BB at a time" ID="ID_1906356668" CREATED="1383591809896" MODIFIED="1383591821034"/>
<node TEXT="jump at end of BB goes back to dispatcher" ID="ID_1793193854" CREATED="1383591821247" MODIFIED="1383591831314"/>
<node TEXT="code cache keeps translated blocks" ID="ID_1154682252" CREATED="1383591831518" MODIFIED="1383591838889"/>
</node>
<node TEXT="why is kernel-level DBT harder?" ID="ID_989068225" CREATED="1383591865348" MODIFIED="1383591872799">
<node TEXT="exceptions and interrups" ID="ID_931231480" CREATED="1383591873195" MODIFIED="1383591878470">
<node TEXT="there are lots of them..." ID="ID_1015336523" CREATED="1383591878843" MODIFIED="1383591885374"/>
</node>
</node>
</node>
<node TEXT="how does kernel-level DBT work?" ID="ID_150789544" CREATED="1383591927848" MODIFIED="1383591934667">
<node TEXT="interpose on all kernel entry points" ID="ID_201852163" CREATED="1383591935144" MODIFIED="1383591942554">
<node TEXT="e.g., control the interrupt descriptor table" ID="ID_1357954702" CREATED="1383591947566" MODIFIED="1383591960041"/>
</node>
<node TEXT="what happens at an interrupt?" ID="ID_1944022437" CREATED="1383591983988" MODIFIED="1383591992255">
<node TEXT="1) convert interrupt state on stack to native values" ID="ID_713993637" CREATED="1383591993587" MODIFIED="1383592004582"/>
<node TEXT="2) emulate precise exceptions" ID="ID_1025856078" CREATED="1383592007554" MODIFIED="1383592013597">
<node TEXT="roll back partially executed translated instructions" ID="ID_363763530" CREATED="1383592034040" MODIFIED="1383592047099"/>
<node TEXT="overhead: translation needs to be structured to be able to roll back." ID="ID_37507932" CREATED="1383592074477" MODIFIED="1383592099303"/>
</node>
<node TEXT="3) emulate precise interrupt" ID="ID_226008726" CREATED="1383592110603" MODIFIED="1383592118678">
<node TEXT="delay delivery until the next instruction starts" ID="ID_1884640513" CREATED="1383592119467" MODIFIED="1383592127285"/>
</node>
</node>
</node>
<node TEXT="BTKernel" ID="ID_991983312" CREATED="1383592292622" MODIFIED="1383592295513">
<node TEXT="loadable kernel-module for linux" ID="ID_1681710794" CREATED="1383592297838" MODIFIED="1383592304265"/>
<node TEXT="insight" ID="ID_713221415" CREATED="1383592304709" MODIFIED="1383592309825">
<node TEXT="fully transparent DBT is not required" ID="ID_1535671383" CREATED="1383592310246" MODIFIED="1383592319632">
<node TEXT="kernel rarely relies on precise interrupts" ID="ID_1550635093" CREATED="1383592319941" MODIFIED="1383592328511"/>
<node TEXT="kernel rarely examines return addresses" ID="ID_767844317" CREATED="1383592328780" MODIFIED="1383592338335"/>
<node TEXT="thus, special cases can be handled specially" ID="ID_529747013" CREATED="1383592346907" MODIFIED="1383592357142"/>
</node>
<node TEXT="interrupts bypass the dispatcher, jump directly to translated code" ID="ID_301826049" CREATED="1383592370138" MODIFIED="1383592381492"/>
</node>
<node TEXT="concerns" ID="ID_73512828" CREATED="1383592410423" MODIFIED="1383592413170">
<node TEXT="at interrupts, read/write of the program counter yields wrong values" ID="ID_1731501074" CREATED="1383592413477" MODIFIED="1383592598189">
<node TEXT="example: linux exception tables in page fault handler" ID="ID_327415904" CREATED="1383592436805" MODIFIED="1383592445375"/>
<node TEXT="exception table constructed at compile time" ID="ID_650986769" CREATED="1383592452092" MODIFIED="1383592458975">
<node TEXT="contains PC ranges that are allowed to page fault" ID="ID_129240442" CREATED="1383592459203" MODIFIED="1383592470206"/>
<node TEXT="at exception, if PC not in table, the kernel panics" ID="ID_1609609514" CREATED="1383592476266" MODIFIED="1383592499716"/>
</node>
<node TEXT="solution: add addresses from code cache to exception table" ID="ID_89331216" CREATED="1383592502296" MODIFIED="1383592517258"/>
</node>
<node TEXT="code-cache addresses live in kernel data structures" ID="ID_201805728" CREATED="1383592631935" MODIFIED="1383592643266">
<node TEXT="what happens if the cache is invalidated?" ID="ID_748274674" CREATED="1383592644495" MODIFIED="1383592650898"/>
<node TEXT="solution: immutable and immovable cache blocks" ID="ID_1136363055" CREATED="1383592722601" MODIFIED="1383592733988"/>
</node>
<node TEXT="imprecise interrupts/exception" ID="ID_854518773" CREATED="1383592783733" MODIFIED="1383592792199">
<node TEXT="solution: do nothing" ID="ID_1376614706" CREATED="1383592794020" MODIFIED="1383592799759"/>
<node TEXT="the authors didn&apos;t find any example where the kernel relies on this." ID="ID_1048825939" CREATED="1383592800220" MODIFIED="1383592812838"/>
</node>
</node>
<node TEXT="optimizations" ID="ID_1954497730" CREATED="1383592818643" MODIFIED="1383592821870">
<node TEXT="L1-cache aware code cache" ID="ID_1809966939" CREATED="1383592823890" MODIFIED="1383592829629">
<node TEXT="DBT engines do direct branch chaining" ID="ID_138263245" CREATED="1383592862248" MODIFIED="1383592870786"/>
<node TEXT="thus, edge code (brach to dispatcher) is executed only once" ID="ID_584935714" CREATED="1383592871271" MODIFIED="1383592891049"/>
<node TEXT="solution: allocate edge code in a special memory region" ID="ID_1488095871" CREATED="1383592903333" MODIFIED="1383592916655"/>
</node>
<node TEXT="handle function returns" ID="ID_1863115504" CREATED="1383592930219" MODIFIED="1383592940910">
<node TEXT="traditionally, &quot;return&quot; handled as indirect branch" ID="ID_118976995" CREATED="1383592941257" MODIFIED="1383592951701"/>
<node TEXT="instead, want to translate &quot;return&quot; to &quot;return&quot;" ID="ID_359932975" CREATED="1383592952065" MODIFIED="1383592971667"/>
<node TEXT="needs carefull handling of &quot;call&quot; instructions in indirect targets" ID="ID_561940146" CREATED="1383592977943" MODIFIED="1383592989538"/>
</node>
</node>
</node>
<node TEXT="results" ID="ID_113474645" CREATED="1383593128485" MODIFIED="1383593129849">
<node TEXT="almost native performance in many cases" ID="ID_1807029741" CREATED="1383593132197" MODIFIED="1383593140064"/>
<node TEXT="call/ret optimization drastically (10000x) reduces the number of dispatcher exits" ID="ID_668338366" CREATED="1383593140357" MODIFIED="1383593166150"/>
</node>
<node TEXT="prior work" ID="ID_922508333" CREATED="1383592254417" MODIFIED="1383592256717">
<node TEXT="VMware study (ASPLOS 2006)" ID="ID_354248494" CREATED="1383592257345" MODIFIED="1383592266908"/>
<node TEXT="DynamoRio" ID="ID_602299107" CREATED="1383592267216" MODIFIED="1383592269659"/>
</node>
<node TEXT="github.com/piyus/btkernel" ID="ID_273326655" CREATED="1383593407074" MODIFIED="1383593418197"/>
</node>
<node TEXT="VirtuOS" POSITION="left" ID="ID_1586033311" CREATED="1383593488021" MODIFIED="1383593490240">
<edge COLOR="#7c007c"/>
<node TEXT="motivation" ID="ID_934495327" CREATED="1383593506347" MODIFIED="1383593518742">
<node TEXT="today&apos;s OSs are monolithic kernels" ID="ID_452667714" CREATED="1383593521290" MODIFIED="1383593533653"/>
<node TEXT="thus, bad fault isolation" ID="ID_1019374982" CREATED="1383593537457" MODIFIED="1383593551668"/>
<node TEXT="error-prone device drivers exacerbate the problem" ID="ID_1061087887" CREATED="1383593576151" MODIFIED="1383593586641"/>
</node>
<node TEXT="prior work" ID="ID_1261608951" CREATED="1383593601781" MODIFIED="1383593603928">
<node TEXT="split monolithic kernel into isolated modules" ID="ID_739032900" CREATED="1383593605373" MODIFIED="1383593619975">
<node TEXT="microkernels" ID="ID_496151576" CREATED="1383593628779" MODIFIED="1383593631926"/>
<node TEXT="user-level drivers" ID="ID_634478463" CREATED="1383593635362" MODIFIED="1383593642653"/>
<node TEXT="Xen driver domains" ID="ID_570239246" CREATED="1383593647226" MODIFIED="1383593654236"/>
</node>
<node TEXT="VirtuOS is a new point in the microkernel-VM design space" ID="ID_486990272" CREATED="1383593664744" MODIFIED="1383593679555"/>
</node>
<node TEXT="goals" ID="ID_742922883" CREATED="1383593692087" MODIFIED="1383593693730">
<node TEXT="flexibility" ID="ID_847219182" CREATED="1383593694095" MODIFIED="1383593696130">
<node TEXT="want to protect many different types of modules" ID="ID_1700699829" CREATED="1383593697007" MODIFIED="1383593733943">
<node TEXT="e.g., drivers" ID="ID_1736435805" CREATED="1383593734348" MODIFIED="1383593736487"/>
<node TEXT="e.g., network stack" ID="ID_874659524" CREATED="1383593736700" MODIFIED="1383593740999"/>
<node TEXT="e.g., file systems" ID="ID_1173337031" CREATED="1383593744067" MODIFIED="1383593746782"/>
</node>
<node TEXT="VirtuOS protects both low-level and high-level components" ID="ID_1650845881" CREATED="1383593754562" MODIFIED="1383593764389"/>
</node>
<node TEXT="strong isolation" ID="ID_515720083" CREATED="1383593765850" MODIFIED="1383593769421">
<node TEXT="protection domains" ID="ID_432071911" CREATED="1383593772521" MODIFIED="1383593777580">
<node TEXT="e.g., separate memory address spaces" ID="ID_943152740" CREATED="1383593777880" MODIFIED="1383593784100"/>
</node>
<node TEXT="privilege separation" ID="ID_804848710" CREATED="1383593785800" MODIFIED="1383593788963">
<node TEXT="e.g., drivers run in less privileged mode" ID="ID_875190918" CREATED="1383593789328" MODIFIED="1383593797915"/>
</node>
<node TEXT="device protection" ID="ID_207445673" CREATED="1383593800759" MODIFIED="1383593803490">
<node TEXT="can protect against faulty devices" ID="ID_272433304" CREATED="1383593806159" MODIFIED="1383593814401"/>
<node TEXT="e.g., iMMU remaps DMA regions" ID="ID_1486521801" CREATED="1383593814614" MODIFIED="1383593824913"/>
</node>
<node TEXT="VirtuOS supports all of these" ID="ID_1803150400" CREATED="1383593827398" MODIFIED="1383593833464"/>
</node>
<node TEXT="performance" ID="ID_815915895" CREATED="1383593836500" MODIFIED="1383593838856">
<node TEXT="performance issues hindered Microkernel adoption" ID="ID_1284642550" CREATED="1383593840260" MODIFIED="1383593848535"/>
<node TEXT="VirtuOS performance comparable to monolithic systems" ID="ID_1022450320" CREATED="1383593857355" MODIFIED="1383593868174"/>
</node>
<node TEXT="compatibility" ID="ID_669381537" CREATED="1383593873874" MODIFIED="1383593876710">
<node TEXT="want application-level compatibility" ID="ID_1961935294" CREATED="1383593882722" MODIFIED="1383593890604"/>
<node TEXT="want system code compatibility" ID="ID_330797797" CREATED="1383593894937" MODIFIED="1383593902156">
<node TEXT="e.g., reuse existing driver unmodified" ID="ID_1870823550" CREATED="1383593902456" MODIFIED="1383593911155"/>
</node>
</node>
</node>
<node TEXT="architecture" ID="ID_1919743377" CREATED="1383593921303" MODIFIED="1383593924106">
<node TEXT="VirtuOS runs on top of hypervisor" ID="ID_454472673" CREATED="1383593924478" MODIFIED="1383593934329"/>
<node TEXT="multiple domains, each in its own VM" ID="ID_523797080" CREATED="1383593934550" MODIFIED="1383593946897">
<node TEXT="e.g., network domain" ID="ID_542938729" CREATED="1383593949013" MODIFIED="1383593953080"/>
<node TEXT="e.g., storage domain" ID="ID_518652311" CREATED="1383593953285" MODIFIED="1383593956312"/>
<node TEXT="e.g., primary domain with process management, PCI, ..." ID="ID_1538953904" CREATED="1383593959405" MODIFIED="1383593969111"/>
</node>
<node TEXT="individual VMs get protected direct device access" ID="ID_170514967" CREATED="1383593981730" MODIFIED="1383593990438"/>
<node TEXT="system calls get directly dispatched to the right VM" ID="ID_811496895" CREATED="1383593994161" MODIFIED="1383594001733"/>
</node>
<node TEXT="example: read system call" ID="ID_1300376510" CREATED="1383594103970" MODIFIED="1383594108334">
<node TEXT="file descriptors are tagged with their service domain" ID="ID_1893702309" CREATED="1383594109122" MODIFIED="1383594118413"/>
<node TEXT="hence, read() call knows what domain to dispatch the syscall to" ID="ID_1068760444" CREATED="1383594118706" MODIFIED="1383594132380"/>
<node TEXT="syscalls are put in a shared request queue" ID="ID_451702361" CREATED="1383594136953" MODIFIED="1383594161226"/>
<node TEXT="storage service domain wakes up, sees request, serves it" ID="ID_867195080" CREATED="1383594161687" MODIFIED="1383594174177"/>
<node TEXT="read() result is copied into data buffer in shared region" ID="ID_1476573644" CREATED="1383594175038" MODIFIED="1383594190408"/>
<node TEXT="service domain puts a &quot;completed&quot; notification in queue, to notify user thread that the syscall has completed" ID="ID_893724427" CREATED="1383594234418" MODIFIED="1383594262747">
<node TEXT="for fast syscalls, user thread can spin until syscall finishes" ID="ID_1184266553" CREATED="1383594391759" MODIFIED="1383594406577"/>
</node>
</node>
<node TEXT="disadvantages" ID="ID_399015078" CREATED="1383594307597" MODIFIED="1383594316176">
<node TEXT="data buffer introduces additional copy" ID="ID_1076793935" CREATED="1383594317020" MODIFIED="1383594323359"/>
</node>
<node TEXT="people.cs.vt.edu/&lt;tilde&gt;rnikola" ID="ID_1777870400" CREATED="1383594955745" MODIFIED="1383595019680"/>
</node>
<node TEXT="20 years of L4" POSITION="left" ID="ID_1920142851" CREATED="1383595288353" MODIFIED="1383595297725">
<edge COLOR="#007c7c"/>
<node TEXT="intro" ID="ID_1543035805" CREATED="1383595298569" MODIFIED="1383595300652">
<node TEXT="20 years ago..." ID="ID_1116870990" CREATED="1383595301009" MODIFIED="1383595305356">
<node TEXT="Windows NT" ID="ID_344857656" CREATED="1383595306152" MODIFIED="1383595316363"/>
<node TEXT="improving IPC by Kernel design (SOSP 1993)" ID="ID_853205242" CREATED="1383595316880" MODIFIED="1383595327698">
<node TEXT="100 microseconds disaster" ID="ID_329018423" CREATED="1383595348565" MODIFIED="1383595354377"/>
<node TEXT="IPCs could not get below 100 us" ID="ID_1466750564" CREATED="1383595354934" MODIFIED="1383595371880"/>
<node TEXT="until L4 did it in 5 us" ID="ID_1764294363" CREATED="1383595379580" MODIFIED="1383595399348">
<node TEXT="in 1995, people found that the cache footprint was the main reason for slowness" ID="ID_511228649" CREATED="1383595414306" MODIFIED="1383595433923"/>
</node>
</node>
</node>
</node>
<node ID="ID_386782743" CREATED="1383595512507" MODIFIED="1383595524642"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      core principle<font color="#0000ff">s</font>
    </p>
  </body>
</html>

</richcontent>
<node TEXT="minimality" ID="ID_1739325071" CREATED="1383595525921" MODIFIED="1383595527901">
<node TEXT="what?" ID="ID_1189495511" CREATED="1383596779989" MODIFIED="1383596781832">
<node TEXT="keep in the kernel only what you must" ID="ID_191642423" CREATED="1383595530594" MODIFIED="1383595537340"/>
<node TEXT="L4 kernels are small (approx 10KLoc)" ID="ID_1066078557" CREATED="1383595587813" MODIFIED="1383595601256"/>
<node TEXT="kernels have not grown much over 20 years" ID="ID_1604132797" CREATED="1383595636409" MODIFIED="1383595645557"/>
<node TEXT="APIs even shrunk, became simpler" ID="ID_1232610327" CREATED="1383595645770" MODIFIED="1383595653108"/>
</node>
<node TEXT="*the* primary design principle" ID="ID_1696635454" CREATED="1383596787379" MODIFIED="1383596804486"/>
</node>
<node TEXT="dependability" ID="ID_1844389733" CREATED="1383595761746" MODIFIED="1383595763885">
<node TEXT="several refinement steps with proofs" ID="ID_1595708661" CREATED="1383595764682" MODIFIED="1383595778004"/>
<node TEXT="thus, verified down to the binary" ID="ID_877246010" CREATED="1383595778393" MODIFIED="1383595784740"/>
</node>
<node TEXT="fast IPC" ID="ID_450512437" CREATED="1383596808555" MODIFIED="1383596813622">
<node TEXT="still matters today" ID="ID_1169931898" CREATED="1383596820874" MODIFIED="1383596843411"/>
<node TEXT="but shouldn&apos;t optimize prematurely" ID="ID_301715899" CREATED="1383596843993" MODIFIED="1383596849835"/>
</node>
</node>
<node TEXT="L4 family tree" ID="ID_977745662" CREATED="1383595660976" MODIFIED="1383595664604">
<node TEXT="many implementations of L4 exist" ID="ID_1125499863" CREATED="1383595665064" MODIFIED="1383595669994"/>
<node TEXT="deployment" ID="ID_1202173152" CREATED="1383595700390" MODIFIED="1383595703489">
<node TEXT="ebook readers" ID="ID_1339150662" CREATED="1383595703829" MODIFIED="1383595710208"/>
<node TEXT="firmware for mobile phone chips" ID="ID_300602018" CREATED="1383595710597" MODIFIED="1383595716696"/>
<node TEXT="used in corean trades" ID="ID_267829643" CREATED="1383595717556" MODIFIED="1383595721496"/>
<node TEXT="PIkeOS used in Airbus 350" ID="ID_880305643" CREATED="1383595721717" MODIFIED="1383595726599"/>
<node TEXT="SiMKo 3 &quot;Merkelphone&quot;" ID="ID_682489049" CREATED="1383595732100" MODIFIED="1383595739807"/>
</node>
</node>
<node TEXT="L4 implementation" ID="ID_840600080" CREATED="1383595840996" MODIFIED="1383595846967">
<node TEXT="overall goal" ID="ID_602415832" CREATED="1383595852788" MODIFIED="1383595854839">
<node TEXT="minimize cache/TLB footprint" ID="ID_1865540157" CREATED="1383595855107" MODIFIED="1383595867342"/>
</node>
<node TEXT="IPC" ID="ID_1819864459" CREATED="1383596278143" MODIFIED="1383596279826">
<node TEXT="rendezvous model" ID="ID_1868240693" CREATED="1383595870699" MODIFIED="1383595875213">
<node TEXT="synchronous IPC model" ID="ID_412606232" CREATED="1383596228106" MODIFIED="1383596232893"/>
<node TEXT="IPC happens when both threads are ready" ID="ID_1259175285" CREATED="1383595887041" MODIFIED="1383595898372"/>
<node TEXT="thus, kernel needs a single copy of data from sender directly to receiver" ID="ID_1277967987" CREATED="1383595898633" MODIFIED="1383595911043"/>
<node TEXT="copy happens in the sender&apos;s context" ID="ID_673589793" CREATED="1383595931790" MODIFIED="1383595938025"/>
<node TEXT="registers don&apos;t need to be copied at all" ID="ID_369648739" CREATED="1383595911912" MODIFIED="1383595927378"/>
</node>
<node TEXT="&quot;Long IPC&quot;" ID="ID_1916672414" CREATED="1383596089507" MODIFIED="1383596094190">
<node TEXT="a feature of early L4 kernels" ID="ID_273422497" CREATED="1383596094587" MODIFIED="1383596103886"/>
<node TEXT="allowed to copy data from anywhere in the sender to anywhere in the receiver" ID="ID_964032620" CREATED="1383596104618" MODIFIED="1383596114573"/>
<node TEXT="both sender and receiver must handle page faults during copy" ID="ID_305131190" CREATED="1383596114817" MODIFIED="1383596126980">
<node TEXT="but page-fault handlers are in userspace" ID="ID_337572473" CREATED="1383596127281" MODIFIED="1383596133812"/>
<node TEXT="untrusted" ID="ID_1406893340" CREATED="1383596134008" MODIFIED="1383596136100"/>
<node TEXT="can lead to DOS" ID="ID_1692880866" CREATED="1383596136465" MODIFIED="1383596139659"/>
</node>
<node TEXT="new L4 kernels do not provide long IPC" ID="ID_1082909317" CREATED="1383596142967" MODIFIED="1383596151843"/>
</node>
<node TEXT="timeouts" ID="ID_1830356022" CREATED="1383596154351" MODIFIED="1383596156482">
<node TEXT="no good theory for determining timeouts" ID="ID_1537633008" CREATED="1383596157014" MODIFIED="1383596168361"/>
<node TEXT="thus, L4 does not provide timeouts for IPC" ID="ID_1536720664" CREATED="1383596201780" MODIFIED="1383596218462"/>
</node>
<node TEXT="issues with synchronous IPC" ID="ID_1784250278" CREATED="1383596284982" MODIFIED="1383596292065">
<node TEXT="threads will always block when doing IPC" ID="ID_1341315573" CREATED="1383596293150" MODIFIED="1383596303664"/>
<node TEXT="this often requires separate threads for IPC" ID="ID_413625367" CREATED="1383596314940" MODIFIED="1383596527651">
<icon BUILTIN="smily_bad"/>
</node>
<node TEXT="newer L4 kernels have asynchronous IPC" ID="ID_694806643" CREATED="1383596349850" MODIFIED="1383596361516"/>
</node>
<node TEXT="IPC destination naming" ID="ID_173294313" CREATED="1383596369472" MODIFIED="1383596375628">
<node TEXT="original L4 used thread IDs for IPC" ID="ID_1632390468" CREATED="1383596376848" MODIFIED="1383596383387"/>
<node TEXT="thus, internal thread structure of server is exposed to client" ID="ID_1976256283" CREATED="1383596390271" MODIFIED="1383596399602"/>
<node TEXT="cannot do load-balancing at the server easily" ID="ID_1292921282" CREATED="1383596400854" MODIFIED="1383596413585"/>
<node TEXT="has covert channels" ID="ID_629468265" CREATED="1383596419501" MODIFIED="1383596423216"/>
<node TEXT="newer L4 kernels use end-points" ID="ID_139671539" CREATED="1383596429885" MODIFIED="1383596453126">
<node TEXT="so-called &quot;ports&quot;" ID="ID_779385397" CREATED="1383596453371" MODIFIED="1383596456462"/>
<node TEXT="synchronous queues that synchronize senders with receivers" ID="ID_1299847288" CREATED="1383596464673" MODIFIED="1383596501275"/>
<node TEXT="queues do not buffer messages (instead, sender blocks)" ID="ID_23248002" CREATED="1383596482113" MODIFIED="1383596493771"/>
</node>
</node>
</node>
<node TEXT="virtual TCB Array" ID="ID_1585208396" CREATED="1383596538509" MODIFIED="1383596549736">
<node TEXT="TCB = thread control block" ID="ID_1719932495" CREATED="1383596558260" MODIFIED="1383596565647"/>
<node TEXT="indexed by thread id" ID="ID_172289070" CREATED="1383596550620" MODIFIED="1383596556855"/>
<node TEXT="Kernel stack allocated alongside the TCB" ID="ID_1191555185" CREATED="1383596587058" MODIFIED="1383596600300">
<node TEXT="can find TCB address by masking bits in some stack pointer" ID="ID_679974486" CREATED="1383596611775" MODIFIED="1383596631010"/>
</node>
<node TEXT="downside" ID="ID_1859275473" CREATED="1383596567123" MODIFIED="1383596572462">
<node TEXT="consumes virtual address space" ID="ID_1167694635" CREATED="1383596572771" MODIFIED="1383596579445"/>
</node>
<node TEXT="no more used in today&apos;s L4" ID="ID_720804995" CREATED="1383596654053" MODIFIED="1383596661424">
<node TEXT="not worthwile on modern processors" ID="ID_830934147" CREATED="1383596662067" MODIFIED="1383596667320"/>
</node>
</node>
</node>
<node TEXT="L4 Tricks and Design Decisions" ID="ID_984921404" CREATED="1383596725081" MODIFIED="1383596736027">
<node TEXT="published at SOSP 93 and 95" ID="ID_1758175855" CREATED="1383596744311" MODIFIED="1383596750930"/>
<node TEXT="most of them no longer valid today" ID="ID_837486177" CREATED="1383596736448" MODIFIED="1383596741515"/>
<node TEXT="what is still valid?" ID="ID_106385216" CREATED="1383596753350" MODIFIED="1383596756625">
<node TEXT="non-preemptible kernel" ID="ID_1628858057" CREATED="1383596757046" MODIFIED="1383596762145"/>
<node TEXT="user-mode device drivers" ID="ID_1195395240" CREATED="1383596762485" MODIFIED="1383596768713"/>
<node TEXT="capabilities are the way to go" ID="ID_185355022" CREATED="1383596868503" MODIFIED="1383596872626"/>
</node>
</node>
<node TEXT="Open problems" ID="ID_1749804575" CREATED="1383596873646" MODIFIED="1383596875697">
<node TEXT="how to reason about time?" ID="ID_1881895969" CREATED="1383596876614" MODIFIED="1383596881017">
<node TEXT="a good abstraction is still elusive" ID="ID_38082014" CREATED="1383596881301" MODIFIED="1383596886961"/>
</node>
</node>
</node>
<node TEXT="Asynchronous Intrusion Recovery" POSITION="left" ID="ID_86668533" CREATED="1383658949807" MODIFIED="1383659039849">
<edge COLOR="#7c7c00"/>
<node TEXT="high-level idea" ID="ID_55754246" CREATED="1383659199385" MODIFIED="1383659202955">
<node TEXT="intrusions happen" ID="ID_349384477" CREATED="1383659203320" MODIFIED="1383659206227"/>
<node TEXT="services should be able to repair after an intrusion" ID="ID_1511713967" CREATED="1383659206448" MODIFIED="1383659215690"/>
<node TEXT="features" ID="ID_1011578027" CREATED="1383659620331" MODIFIED="1383659625358">
<node TEXT="asynchronous" ID="ID_47632481" CREATED="1383659625755" MODIFIED="1383659628230"/>
<node TEXT="decentralized" ID="ID_300148473" CREATED="1383659628442" MODIFIED="1383659631749"/>
</node>
</node>
<node TEXT="design" ID="ID_1465426709" CREATED="1383659275202" MODIFIED="1383659276518">
<node TEXT="asynchronous repair" ID="ID_987867737" CREATED="1383659277002" MODIFIED="1383659281045">
<node TEXT="can happen even if services are unavailable" ID="ID_840691782" CREATED="1383659281282" MODIFIED="1383659289365"/>
</node>
<node TEXT="repair happens directly within web services" ID="ID_1613083608" CREATED="1383659290145" MODIFIED="1383659298812">
<node TEXT="no centralised control needed" ID="ID_666038631" CREATED="1383659299072" MODIFIED="1383659303883"/>
</node>
</node>
<node TEXT="prototype" ID="ID_1984164995" CREATED="1383659308568" MODIFIED="1383659312227">
<node TEXT="Aire" ID="ID_1543832575" CREATED="1383659312872" MODIFIED="1383659314011"/>
<node TEXT="works with Django web services" ID="ID_1907383319" CREATED="1383659314223" MODIFIED="1383659320466"/>
<node TEXT="experiments" ID="ID_42331186" CREATED="1383659344653" MODIFIED="1383659346513">
<node TEXT="modified a number of Django services" ID="ID_38453792" CREATED="1383659346781" MODIFIED="1383659354480">
<node TEXT="AskBot" ID="ID_672357678" CREATED="1383659354685" MODIFIED="1383659356704">
<node TEXT="a forum" ID="ID_152429382" CREATED="1383659548823" MODIFIED="1383659551555"/>
</node>
<node TEXT="OAuth Provider" ID="ID_101847667" CREATED="1383659356917" MODIFIED="1383659360080"/>
<node TEXT="DPaste" ID="ID_215760934" CREATED="1383659360316" MODIFIED="1383659366048">
<node TEXT="a place where people can post code snippets" ID="ID_355931817" CREATED="1383659553111" MODIFIED="1383659561306"/>
</node>
</node>
<node TEXT="Introduced a vulnerability in the OAuth provider" ID="ID_1406929303" CREATED="1383659396186" MODIFIED="1383659405125">
<node TEXT="thus, attacker got full access to the service" ID="ID_1235782424" CREATED="1383659405857" MODIFIED="1383659431963"/>
</node>
<node TEXT="OAuth provider then initiates recovery" ID="ID_79409948" CREATED="1383659433800" MODIFIED="1383659440370">
<node TEXT="AskBot removes posts by attacker" ID="ID_1154098247" CREATED="1383659445703" MODIFIED="1383659454881"/>
<node TEXT="DPaste removes code snippets created by attacker" ID="ID_156806902" CREATED="1383659455118" MODIFIED="1383659463584"/>
</node>
<node TEXT="overhead" ID="ID_852685804" CREATED="1383659473588" MODIFIED="1383659475432">
<node TEXT="roughly 20% less throughput" ID="ID_1191058187" CREATED="1383659475725" MODIFIED="1383659481600"/>
<node TEXT="5-9 KB storage per request" ID="ID_1164512064" CREATED="1383659481860" MODIFIED="1383659494823"/>
</node>
</node>
</node>
</node>
<node TEXT="Crash Consistency" POSITION="left" ID="ID_456835501" CREATED="1383659993611" MODIFIED="1383659997598">
<edge COLOR="#ff0000"/>
<node TEXT="problem" ID="ID_131427476" CREATED="1383660008362" MODIFIED="1383660010053">
<node TEXT="fsync is very expensive, needs to flush disk cache" ID="ID_1758493239" CREATED="1383660010377" MODIFIED="1383660365350"/>
<node TEXT="crash consistency is expensive" ID="ID_1069629824" CREATED="1383660020257" MODIFIED="1383660025268"/>
<node TEXT="file systems conflate ordering and durability" ID="ID_1121511388" CREATED="1383660030297" MODIFIED="1383660038228">
<node TEXT="writes are ordered, depend on each other" ID="ID_1828368498" CREATED="1383660039968" MODIFIED="1383660048394"/>
<node TEXT="crash consistency needs ordering" ID="ID_1733645103" CREATED="1383660213125" MODIFIED="1383660219671"/>
<node TEXT="no way to guarantee ordering only" ID="ID_764382252" CREATED="1383660220029" MODIFIED="1383660231151">
<node TEXT="calls like fsync guarantee ordering *and* durability" ID="ID_1846386205" CREATED="1383660231403" MODIFIED="1383660242950"/>
<node TEXT="thus they are expensive" ID="ID_1968723356" CREATED="1383660243162" MODIFIED="1383660247126"/>
</node>
</node>
</node>
<node TEXT="OptFS" ID="ID_721772137" CREATED="1383660092317" MODIFIED="1383660095344">
<node TEXT="Optimistic File System" ID="ID_24787460" CREATED="1383660095524" MODIFIED="1383660100143"/>
<node TEXT="decouples ordering and durability" ID="ID_89687398" CREATED="1383660103132" MODIFIED="1383660109583"/>
<node TEXT="trades freshness for performance" ID="ID_475573510" CREATED="1383660109811" MODIFIED="1383660114374"/>
<node TEXT="techniques" ID="ID_1064463684" CREATED="1383660119315" MODIFIED="1383660120918">
<node TEXT="checksums" ID="ID_1577650240" CREATED="1383660121155" MODIFIED="1383660123542">
<node TEXT="Journal commits contain checksum over data and journaling metadata" ID="ID_319448900" CREATED="1383660808877" MODIFIED="1383660822479"/>
<node TEXT="thus, we can check whether journaling made it to disk" ID="ID_1682878945" CREATED="1383660823124" MODIFIED="1383660850638"/>
</node>
<node TEXT="delayed writes" ID="ID_1156561464" CREATED="1383660123730" MODIFIED="1383660126365">
<node TEXT="metadata writes are delayed until the affected blocks are no more in the disk cache" ID="ID_1101888518" CREATED="1383660911758" MODIFIED="1383660925089"/>
</node>
<node TEXT="strong crash consistency" ID="ID_26760121" CREATED="1383660126586" MODIFIED="1383660134565"/>
</node>
<node TEXT="new primitive" ID="ID_159300640" CREATED="1383660136146" MODIFIED="1383660140341">
<node TEXT="osync" ID="ID_131008660" CREATED="1383660141121" MODIFIED="1383660142325">
<node TEXT="guarantees only odering, not durability" ID="ID_53049155" CREATED="1383660142528" MODIFIED="1383660152452"/>
</node>
<node TEXT="dsync" ID="ID_179338404" CREATED="1383661002440" MODIFIED="1383661004699">
<node TEXT="provides durability" ID="ID_1094208548" CREATED="1383661006872" MODIFIED="1383661009939"/>
<node TEXT="fsync = osync + dsync" ID="ID_1483426159" CREATED="1383661010639" MODIFIED="1383661017154"/>
</node>
</node>
</node>
<node TEXT="Journaling" ID="ID_443482027" CREATED="1383660164640" MODIFIED="1383660166259">
<node TEXT="before updating the FS, write a note describing the update" ID="ID_1051772448" CREATED="1383660166711" MODIFIED="1383660178298"/>
<node TEXT="ensure note is safely on disk before performing update" ID="ID_295309896" CREATED="1383660179126" MODIFIED="1383660191041"/>
<node TEXT="disk caches are bad for ordering" ID="ID_1873654932" CREATED="1383660288200" MODIFIED="1383660299842">
<node TEXT="because disks might reorder writes in the cache" ID="ID_1483435414" CREATED="1383660300247" MODIFIED="1383660311001"/>
<node TEXT="thus, fsync needs to flush write buffer" ID="ID_1713816413" CREATED="1383660311222" MODIFIED="1383660327150">
<icon BUILTIN="smily_bad"/>
</node>
</node>
</node>
<node TEXT="probabilistic crash consistency" ID="ID_540551456" CREATED="1383660409535" MODIFIED="1383660415394">
<node TEXT="ext3 did not enable flushes by default, for many years" ID="ID_1445001144" CREATED="1383660415751" MODIFIED="1383660426897"/>
<node TEXT="this was often OK" ID="ID_20756533" CREATED="1383660427103" MODIFIED="1383660430905">
<node TEXT="crashes sometimes did not lead to inconsistency" ID="ID_464846969" CREATED="1383660442246" MODIFIED="1383660452784"/>
</node>
<node TEXT="works well for read-intensive workloads" ID="ID_1080477046" CREATED="1383660593788" MODIFIED="1383660601054"/>
<node TEXT="does not work well for databases" ID="ID_1301313030" CREATED="1383660601267" MODIFIED="1383660605270"/>
</node>
<node TEXT="prototype" ID="ID_504785466" CREATED="1383661033934" MODIFIED="1383661037193">
<node TEXT="3000 lines of code modified from ext4" ID="ID_1187394440" CREATED="1383661037518" MODIFIED="1383661045945"/>
<node TEXT="does OptFS preserve consistency?" ID="ID_1119466036" CREATED="1383661079034" MODIFIED="1383661085902">
<node TEXT="yes, never found inconsistency in 400 random crashes" ID="ID_444914025" CREATED="1383661090634" MODIFIED="1383661102500"/>
</node>
<node TEXT="how does OptFS perform?" ID="ID_1290983969" CREATED="1383661107297" MODIFIED="1383661138155">
<node TEXT="4-10x better than ext4 in some workloads" ID="ID_307721192" CREATED="1383661112041" MODIFIED="1383661129923"/>
</node>
<node TEXT="Can one build application-level consistency?" ID="ID_1728267841" CREATED="1383661138567" MODIFIED="1383661146394">
<node TEXT="experiment" ID="ID_1154999195" CREATED="1383661231297" MODIFIED="1383661232923">
<node TEXT="modified sqlite, replace all fsync with osync" ID="ID_1528424672" CREATED="1383661152510" MODIFIED="1383661207630"/>
<node TEXT="start with a consistent disk image" ID="ID_642595325" CREATED="1383661209515" MODIFIED="1383661214965"/>
<node TEXT="drop all writes after some randomly chosen point" ID="ID_423323075" CREATED="1383661167613" MODIFIED="1383661226061"/>
<node TEXT="replay writes on original disk image" ID="ID_1710951056" CREATED="1383661175252" MODIFIED="1383661182215"/>
<node TEXT="examine whether the result is consistent" ID="ID_553927521" CREATED="1383661182419" MODIFIED="1383661188903"/>
</node>
<node TEXT="zero inconsistencies found" ID="ID_1201940974" CREATED="1383661247968" MODIFIED="1383661254875"/>
<node TEXT="some inconsistencies found with ext4 without flushes" ID="ID_1179209334" CREATED="1383661268582" MODIFIED="1383661278641"/>
<node TEXT="OptFS recovers to initial image more often than ext4 with flushes" ID="ID_1259681566" CREATED="1383661288269" MODIFIED="1383661305111"/>
<node TEXT="But OptFS is 10x faster than ext4 with flushes" ID="ID_771402782" CREATED="1383661308804" MODIFIED="1383661319390"/>
</node>
</node>
<node TEXT="github.com/vijay03/optfs" ID="ID_9658348" CREATED="1383661453578" MODIFIED="1383661465661"/>
</node>
<node TEXT="Do not blame users for misconfigurations" POSITION="left" ID="ID_1887254330" CREATED="1383661833064" MODIFIED="1383661838091">
<edge COLOR="#0000ff"/>
<node TEXT="intro" ID="ID_1078692416" CREATED="1383661838464" MODIFIED="1383661844692">
<node TEXT="we all make configuration errors" ID="ID_1841292946" CREATED="1383661845056" MODIFIED="1383661851715">
<node TEXT="30% of software issues" ID="ID_720179602" CREATED="1383661852302" MODIFIED="1383661869962"/>
</node>
<node TEXT="misconfigurations are bad" ID="ID_577394483" CREATED="1383661993830" MODIFIED="1383661997513">
<node TEXT="20% of tested software can be made unavailable by misconfiguration" ID="ID_1503211789" CREATED="1383661997733" MODIFIED="1383662012904"/>
</node>
<node TEXT="often, this is because config is hard" ID="ID_525088317" CREATED="1383661876054" MODIFIED="1383661881721">
<node TEXT="there are invalid configuration settings" ID="ID_1153713945" CREATED="1383661889397" MODIFIED="1383661894688"/>
</node>
<node TEXT="configuration is a user interface" ID="ID_1088732666" CREATED="1383661915012" MODIFIED="1383661919943">
<node TEXT="it should be as easy as IPhones" ID="ID_515426021" CREATED="1383661933162" MODIFIED="1383661939189"/>
</node>
<node TEXT="goals of this project" ID="ID_494979273" CREATED="1383661955344" MODIFIED="1383661959700">
<node TEXT="react gracefully to misconfiguration" ID="ID_791913350" CREATED="1383661959969" MODIFIED="1383661967659">
<node TEXT="system should detect misconfig, not crash" ID="ID_1953995888" CREATED="1383661968040" MODIFIED="1383661974011"/>
</node>
<node TEXT="intuitive configuration" ID="ID_995546965" CREATED="1383662027876" MODIFIED="1383662036655">
<node TEXT="assumptions should be documented" ID="ID_1232459601" CREATED="1383662038180" MODIFIED="1383662043366">
<node TEXT="e.g., lower-case only values" ID="ID_460617246" CREATED="1383662043579" MODIFIED="1383662049094"/>
</node>
</node>
</node>
</node>
<node TEXT="contributions" ID="ID_232499922" CREATED="1383662076745" MODIFIED="1383662080940">
<node TEXT="spex" ID="ID_510003670" CREATED="1383662084344" MODIFIED="1383662086355">
<node TEXT="automatically infer configuration constraints" ID="ID_1841801810" CREATED="1383662086624" MODIFIED="1383662093251">
<node TEXT="static source code analysis" ID="ID_1655800611" CREATED="1383662093992" MODIFIED="1383662100738"/>
</node>
</node>
<node TEXT="ues spex to" ID="ID_1459215210" CREATED="1383662118310" MODIFIED="1383662121473">
<node TEXT="expose misconfiguration vulnerabilities" ID="ID_1953816521" CREATED="1383662121774" MODIFIED="1383662127704"/>
<node TEXT="detect error-prone configuration design" ID="ID_31676063" CREATED="1383662127925" MODIFIED="1383662133712"/>
</node>
<node TEXT="improve configuration of real-world system" ID="ID_631080056" CREATED="1383662141540" MODIFIED="1383662148320">
<node TEXT="743 vulnerabilities reported, 364 fixed" ID="ID_1129065713" CREATED="1383662180265" MODIFIED="1383663179686"/>
<node TEXT="112 bugs reported, 80 fixed" ID="ID_1739102301" CREATED="1383662149547" MODIFIED="1383662158159"/>
</node>
</node>
<node TEXT="Spex" ID="ID_1300652774" CREATED="1383662192361" MODIFIED="1383662194244">
<node TEXT="input: source code" ID="ID_1167663530" CREATED="1383662194560" MODIFIED="1383662202748"/>
<node TEXT="output: configuration constraints" ID="ID_1633138864" CREATED="1383662202985" MODIFIED="1383662278239"/>
<node TEXT="architecture" ID="ID_1856853377" CREATED="1383662213136" MODIFIED="1383662215619">
<node TEXT="mapping engine" ID="ID_1934075154" CREATED="1383662215960" MODIFIED="1383662218347">
<node TEXT="maps configuration directive to program variables" ID="ID_8258226" CREATED="1383662225495" MODIFIED="1383662232858"/>
<node TEXT="non-trivial problems" ID="ID_1008703145" CREATED="1383662296715" MODIFIED="1383662301589"/>
<node TEXT="can often exploit program structure" ID="ID_1640648956" CREATED="1383662301834" MODIFIED="1383662308629">
<node TEXT="often, mapping is structure-based" ID="ID_224056387" CREATED="1383662308905" MODIFIED="1383662321580">
<node TEXT="a program data structure corresponds to config file" ID="ID_1071714741" CREATED="1383662321800" MODIFIED="1383662335491"/>
</node>
</node>
<node TEXT="but always relies on developer annotations" ID="ID_1803144673" CREATED="1383662358198" MODIFIED="1383662371737"/>
</node>
<node TEXT="inference engine" ID="ID_1114371309" CREATED="1383662218583" MODIFIED="1383662224626">
<node TEXT="static analysis of program variables" ID="ID_222538450" CREATED="1383662247014" MODIFIED="1383662267656"/>
<node TEXT="data type inference" ID="ID_1543293939" CREATED="1383662585519" MODIFIED="1383662588650">
<node TEXT="check how value is used in libcall/syscall" ID="ID_573634531" CREATED="1383662592095" MODIFIED="1383662599881"/>
<node TEXT="finds, e.g., values that must name files" ID="ID_34302005" CREATED="1383662604798" MODIFIED="1383662617792"/>
</node>
<node TEXT="data range inference" ID="ID_702014931" CREATED="1383662619821" MODIFIED="1383662623136">
<node TEXT="looks for comparisons with constant values" ID="ID_614896957" CREATED="1383662623412" MODIFIED="1383662628295"/>
</node>
<node TEXT="control dependency inference" ID="ID_909005842" CREATED="1383662646003" MODIFIED="1383662663149">
<node TEXT="finds dependencies between two config directives" ID="ID_1000578422" CREATED="1383662667619" MODIFIED="1383662678812"/>
<node TEXT="some values are only read when others are set" ID="ID_2058032" CREATED="1383662693047" MODIFIED="1383662704227"/>
</node>
</node>
</node>
</node>
<node TEXT="use cases" ID="ID_1241599179" CREATED="1383662761715" MODIFIED="1383662764518">
<node TEXT="misconfiguration injection" ID="ID_965782792" CREATED="1383662764850" MODIFIED="1383662772574">
<node TEXT="uses discovered constraints to generate &quot;likely valid&quot; configs" ID="ID_1872241921" CREATED="1383662772858" MODIFIED="1383662789197"/>
</node>
<node TEXT="detect error-prone configs" ID="ID_1576222694" CREATED="1383662895411" MODIFIED="1383662905757">
<node TEXT="inconsistencies" ID="ID_1756905975" CREATED="1383662906114" MODIFIED="1383662908493">
<node TEXT="e.g., different units" ID="ID_477840925" CREATED="1383662928496" MODIFIED="1383662933107"/>
<node TEXT="e.g., different case sensitivities" ID="ID_1327264166" CREATED="1383662933335" MODIFIED="1383662944068"/>
</node>
<node TEXT="silent overruling of user-specified values" ID="ID_1549381325" CREATED="1383662908730" MODIFIED="1383662917084"/>
<node TEXT="undocumented constraints" ID="ID_726368121" CREATED="1383662919329" MODIFIED="1383662923668"/>
</node>
</node>
<node TEXT="results" ID="ID_1251621212" CREATED="1383663063167" MODIFIED="1383663064171">
<node TEXT="requires little annotation" ID="ID_1423787197" CREATED="1383663064543" MODIFIED="1383663069578">
<node TEXT="10 lines on average" ID="ID_1068675142" CREATED="1383663069902" MODIFIED="1383663080914"/>
</node>
<node TEXT="could detect approx 25% of real-world misconfigurations in advance" ID="ID_1883238880" CREATED="1383663082798" MODIFIED="1383663107304"/>
<node TEXT="inference engine is acurrate" ID="ID_569887920" CREATED="1383663113747" MODIFIED="1383663121575"/>
</node>
<node TEXT="TODO" ID="ID_742149007" CREATED="1383662162323" MODIFIED="1383662163966">
<node TEXT="tell Silviu about this" ID="ID_936727314" CREATED="1383662164234" MODIFIED="1383662168358"/>
<node TEXT="Talk with the developers about the tool" ID="ID_1269802052" CREATED="1383663321998" MODIFIED="1383663335393"/>
</node>
</node>
<node TEXT="Towards Optimization-Safe Systems" POSITION="left" ID="ID_1481063827" CREATED="1383663576725" MODIFIED="1383663583496">
<edge COLOR="#00ff00"/>
<node TEXT="intro" ID="ID_1501233040" CREATED="1383663607027" MODIFIED="1383663608318">
<node TEXT="how compilers can screw up your code" ID="ID_1558495209" CREATED="1383663608635" MODIFIED="1383663616742"/>
<node TEXT="undefined behavior" ID="ID_163582718" CREATED="1383663630561" MODIFIED="1383663634004">
<node TEXT="problematic" ID="ID_845177403" CREATED="1383663634242" MODIFIED="1383663636461"/>
</node>
<node TEXT="disagreement between compiler writers and developers" ID="ID_463133270" CREATED="1383664231241" MODIFIED="1383664243276"/>
<node TEXT="example" ID="ID_109575366" CREATED="1383663684086" MODIFIED="1383663685578">
<node TEXT="compiler discards overflow check" ID="ID_1344150470" CREATED="1383663685950" MODIFIED="1383663692945">
<node TEXT="C spec says that pointer overflow is undefined" ID="ID_861814497" CREATED="1383663732163" MODIFIED="1383663738886"/>
<node TEXT="compiler assumes it will not happen" ID="ID_1930010559" CREATED="1383663739106" MODIFIED="1383663744237"/>
<node TEXT="attacker can craft a large offset that will not be detected" ID="ID_1284122010" CREATED="1383663765777" MODIFIED="1383663775443"/>
</node>
<node TEXT="meaningless checks found in real code" ID="ID_1820465657" CREATED="1383663833756" MODIFIED="1383663838567">
<node TEXT="pointer overflow" ID="ID_552814541" CREATED="1383663838883" MODIFIED="1383663843039"/>
<node TEXT="signed integer overflow" ID="ID_1318188270" CREATED="1383663843259" MODIFIED="1383663846334"/>
<node TEXT="oversized shift (if (! (1 &lt;&lt; x)))" ID="ID_1565400833" CREATED="1383663849843" MODIFIED="1383663871373"/>
<node TEXT="null pointer dereference" ID="ID_1351178836" CREATED="1383664135711" MODIFIED="1383664140315"/>
<node TEXT="absolute value overflow" ID="ID_296037016" CREATED="1383664140616" MODIFIED="1383664143771"/>
</node>
</node>
</node>
<node TEXT="def: unstable code" ID="ID_696905018" CREATED="1383663885848" MODIFIED="1383663891404">
<node TEXT="code that is discarded by a compiler" ID="ID_544097925" CREATED="1383663891720" MODIFIED="1383663896715"/>
</node>
<node TEXT="contribs" ID="ID_132031741" CREATED="1383663904888" MODIFIED="1383663906922">
<node TEXT="case study of unstable code" ID="ID_97430869" CREATED="1383663907127" MODIFIED="1383663911994"/>
<node TEXT="algo for identifying unstable code" ID="ID_464468879" CREATED="1383663916463" MODIFIED="1383663921594"/>
<node TEXT="a static checker STACK" ID="ID_650731617" CREATED="1383663922142" MODIFIED="1383663928977"/>
</node>
<node TEXT="STACK tool" ID="ID_194355488" CREATED="1383664282350" MODIFIED="1383664284250">
<node TEXT="assumption delta: developers don&apos;t invoke undefined behavior" ID="ID_726851330" CREATED="1383664323964" MODIFIED="1383664436202"/>
<node TEXT="find code that can only be optimized away thanks to this assumption" ID="ID_326491926" CREATED="1383664349450" MODIFIED="1383664362524"/>
<node TEXT="STACKS mimics a compiler that selectively enables the assumption" ID="ID_1156558662" CREATED="1383664367345" MODIFIED="1383664382227">
<node TEXT="first compile code without undef opts" ID="ID_459467097" CREATED="1383664382528" MODIFIED="1383664389762"/>
<node TEXT="then with" ID="ID_1385217212" CREATED="1383664389959" MODIFIED="1383664391315"/>
<node TEXT="find difference" ID="ID_767390527" CREATED="1383664391535" MODIFIED="1383664394242"/>
</node>
<node TEXT="delta" ID="ID_940481377" CREATED="1383664438348" MODIFIED="1383664439959">
<node TEXT="for all e&gt; reachable(e) implies not undefined(e)" ID="ID_113232847" CREATED="1383664441924" MODIFIED="1383664459326"/>
<node TEXT="STACK uses a constraint solver to prove check==false, with and without delta" ID="ID_153271635" CREATED="1383664522766" MODIFIED="1383664554583"/>
<node TEXT="use of constraint solver reduces dependence on a particular compiler" ID="ID_1066098173" CREATED="1383664570914" MODIFIED="1383664593220"/>
</node>
</node>
<node TEXT="evaluation" ID="ID_1912974261" CREATED="1383664606927" MODIFIED="1383664613883">
<node TEXT="found 160 new bugs" ID="ID_1027386562" CREATED="1383664625783" MODIFIED="1383664629731">
<node TEXT="developers accepted most patches" ID="ID_1569661935" CREATED="1383664630055" MODIFIED="1383664634850"/>
<node TEXT="false positive rate" ID="ID_118813363" CREATED="1383664646102" MODIFIED="1383664650121">
<node TEXT="0/11 for Kerberos" ID="ID_1050585854" CREATED="1383664650430" MODIFIED="1383664657153"/>
<node TEXT="4/68 for Postgres" ID="ID_346021539" CREATED="1383664657365" MODIFIED="1383664670312"/>
</node>
</node>
<node TEXT="applied stack to all packages in debian" ID="ID_531624347" CREATED="1383664724057" MODIFIED="1383664729948">
<node TEXT="8575 C/C++ packages" ID="ID_1205612624" CREATED="1383664733593" MODIFIED="1383664740211"/>
<node TEXT="40% contain STACK warnings" ID="ID_1649577144" CREATED="1383664744664" MODIFIED="1383664748675"/>
</node>
<node TEXT="analysis time" ID="ID_1868964772" CREATED="1383664755535" MODIFIED="1383664760362">
<node TEXT="linux kernel" ID="ID_237011772" CREATED="1383664761847" MODIFIED="1383664772097">
<node TEXT="30min to build" ID="ID_1263543011" CREATED="1383664772390" MODIFIED="1383664774713"/>
<node TEXT="60min to analyze" ID="ID_1940021429" CREATED="1383664774926" MODIFIED="1383664778241"/>
</node>
</node>
</node>
<node TEXT="future work" ID="ID_72006670" CREATED="1383664838185" MODIFIED="1383664840516">
<node TEXT="use this to hide backdoors?" ID="ID_986607831" CREATED="1383664840842" MODIFIED="1383664845452">
<node TEXT="&quot;reflections on trusting trust&quot;" ID="ID_1530684601" CREATED="1383664854799" MODIFIED="1383664862467"/>
<node TEXT="some government agency could submit patches with unstable code" ID="ID_73990296" CREATED="1383664868944" MODIFIED="1383664879794"/>
<node TEXT="could easily slip through code reviews" ID="ID_1823266340" CREATED="1383664882230" MODIFIED="1383664887985"/>
</node>
</node>
<node TEXT="Tidbits" ID="ID_1269958201" CREATED="1383664109937" MODIFIED="1383664112565">
<node TEXT="great use of slide background color change" ID="ID_321381060" CREATED="1383664112858" MODIFIED="1383664120516"/>
<node TEXT="good answer to questions" ID="ID_1281181158" CREATED="1383665423083" MODIFIED="1383665488970">
<node TEXT="&quot;this is a really deep question.&quot;" ID="ID_328582633" CREATED="1383665489238" MODIFIED="1383665507616"/>
</node>
</node>
<node TEXT="css.csail.mit.edu/stack/" ID="ID_169358114" CREATED="1383664905749" MODIFIED="1383664912624"/>
</node>
</node>
</map>
